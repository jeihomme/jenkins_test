<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="mngCuse">

	<!-- 로그인 체크 -->
	<select id="selectMngCuseList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
				]]>
			<if test="status not in {'LIST'}">
				<![CDATA[
SELECT C.*, REPLACE(CONVERT(C.NUM_DESC, CHAR),'.0','') AS NUM_DESC_ORDER FROM (
	SELECT B.*, (@rownumB:=@rownumB+1) as NUM_ASC FROM(  
		SELECT A.*, (@rownumA:=@rownumA+1) as NUM_DESC FROM (
				]]>
			</if>
		<![CDATA[
			SELECT
				BUY_IDX,
				COUP_IDX,
				DATE_FORMAT(COUP_REG_DTM, '%Y-%m-%d') AS COUP_DTM,
				( SELECT COUP_USE_DATE FROM PPM_COUP WHERE COUP_IDX = ( SELECT COUP_IDX FROM PPM_COUP_DATA WHERE DATA_IDX = MAIN.DATA_IDX ) ) AS COUP_TERM,
				( SELECT DATE_FORMAT(SYS_REG_DTM, '%Y-%m-%d') FROM PPM_COUP WHERE COUP_IDX = ( SELECT COUP_IDX FROM PPM_COUP_DATA WHERE DATA_IDX = MAIN.DATA_IDX ) ) AS COUP_REG_DTM,
				DATE_FORMAT(COUP_MOD_DTM, '%Y-%m-%d') AS COUP_USE_DTM,
				 (
				 	CASE
				 		WHEN COUP_CATE_CD != '전체' then
				 			CASE 
				 				WHEN CNT > 0 THEN
				 					CONCAT(CONCAT(CONCAT(COUP_CATE_CD, ' 외 '),CNT),'건')
				 				ELSE COUP_CATE_CD
				 				END
				  		ELSE '전체'
				 	END
				 ) AS COUP_CATE_CD,
				COUP_NM,
				USER_NM,
				USER_EMAIL,
				BUY_STAT,
				
				COUP_UUID,
				COUP_KIND,
				PRDT_NM,
				
				PUB_REG_DTM,
				BUY_NO,
				BUY_CD,
				COUP_STR_DTM,
				COUP_END_DTM,
				PUC_REG_DTM,
				BUY_PRIC,
				REAL_PAY_PRIC,
				REAL_DISC_PRIC
			FROM (
			   SELECT
			   		PUB.BUY_IDX,
					PUC.COUP_IDX,
					PUC.DATA_IDX,
					PUC.SYS_REG_DTM AS COUP_REG_DTM,
					PUC.SYS_MOD_DTM AS COUP_MOD_DTM,
					IFNULL(( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PCOUP.COUP_CATE_CD,1,7) ),'전체') AS COUP_CATE_CD,
					(CHAR_LENGTH(PCOUP.COUP_CATE_CD)-CHAR_LENGTH(REPLACE(PCOUP.COUP_CATE_CD,',',''))) AS CNT,
					
					PCOUP.COUP_NM,
					PU.USER_NM,
					PU.USER_EMAIL,

					PCOUP.COUP_UUID,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PCOUP.COUP_KIND ) AS COUP_KIND,
					
					DATE_FORMAT(PUB.SYS_REG_DTM, '%Y-%m-%d') AS PUB_REG_DTM,
					PUB.BUY_STAT,
					PUB.BUY_NO,
					PUB.BUY_CD,
					DATE_FORMAT(COUP_STR_DTM, '%Y-%m-%d') AS COUP_STR_DTM,
					DATE_FORMAT(COUP_END_DTM, '%Y-%m-%d') AS COUP_END_DTM,
					DATE_FORMAT(PUC.SYS_REG_DTM, '%Y-%m-%d') AS PUC_REG_DTM,
					PRDT.PRDT_NM,
					PUB.BUY_PRIC,
					PUB.REAL_PAY_PRIC,
					PUB.REAL_DISC_PRIC
				FROM
					PPM_USER_BUY PUB,
					PPM_COUP PCOUP,
					PPM_COUP_DATA PCD, 
					PPM_USER_COUP PUC,
					PPM_USER PU,
					(
					        SELECT 'FACE_IDX' AS PRDT_TYPE, PSF.CATE_IDX, PSF.FACE_IDX AS PRDT_IDX, PPF.FACE_CD AS PRDT_CD,(SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, FACE_PRIC_REAL AS PRDT_PRIC_REAL, FACE_IMG_UUID AS PRDT_UUID, 'FACE_IMG_UUID' AS PRDT_UUID_NM, 1 AS PRDT_CNT FROM PPM_SALE_FACE PSF, PPM_PRDT_FACE PPF WHERE SALE_USE_YN = 'Y' AND PSF.FACE_IDX = PPF.FACE_IDX
					          UNION ALL
					            SELECT 'LECT_IDX' AS PRDT_TYPE, PSLE.CATE_IDX, PSLE.LECT_IDX AS PRDT_IDX, PPLE.LECT_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLE.LECT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, LECT_PRIC_REAL AS PRDT_PRIC_REAL, LECT_UUID AS PRDT_UUID, 'LECT_UUID' AS PRDT_UUID_NM, ( SELECT COUNT(0) FROM PPM_PRDT_LECT_DATA PPLD, PPM_PRDT_VOD_DATA PPVD WHERE PPLD.LECT_IDX = PSLE.LECT_IDX AND PPLD.DATA_USE_YN = 'Y' AND PPLD.DATA_IDX = PPVD.DATA_IDX AND PPVD.DATA_USE_YN = 'Y' ) AS PRDT_CNT FROM PPM_SALE_LECT PSLE, PPM_PRDT_LECT PPLE WHERE SALE_USE_YN = 'Y' AND PSLE.LECT_IDX = PPLE.LECT_IDX
					          UNION ALL
					            SELECT 'CHAT_IDX' AS PRDT_TYPE, PSC.CATE_IDX, PSC.CHAT_IDX AS PRDT_IDX, PPC.CHAT_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, CHAT_PRIC_REAL AS PRDT_PRIC_REAL, CHAT_IMG_UUID AS PRDT_UUID, 'CHAT_IMG_UUID' AS PRDT_UUID_NM, 1 AS PRDT_CNT FROM PPM_SALE_CHAT PSC, PPM_PRDT_CHAT PPC WHERE SALE_USE_YN = 'Y' AND PSC.CHAT_IDX = PPC.CHAT_IDX
					          UNION ALL
					            SELECT 'MAIL_IDX' AS PRDT_TYPE, PSM.CATE_IDX, PSM.MAIL_IDX AS PRDT_IDX, PPM.MAIL_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, MAIL_PRIC_REAL AS PRDT_PRIC_REAL, MAIL_IMG_UUID AS PRDT_UUID, 'MAIL_IMG_UUID' AS PRDT_UUID_NM, PPM.MAIL_CNT AS PRDT_CNT FROM PPM_SALE_MAIL PSM, PPM_PRDT_MAIL PPM WHERE SALE_USE_YN = 'Y' AND PSM.MAIL_IDX = PPM.MAIL_IDX
					          UNION ALL
					            SELECT 'LIVE_IDX' AS PRDT_TYPE, PSLI.CATE_IDX, PSLI.LIVE_IDX AS PRDT_IDX, PPLI.LIVE_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, LIVE_PRIC_REAL AS PRDT_PRIC_REAL, LIVE_IMG_UUID AS PRDT_UUID, 'LIVE_IMG_UUID' AS PRDT_UUID_NM, 1 AS PRDT_CNT FROM PPM_SALE_LIVE PSLI, PPM_PRDT_LIVE PPLI WHERE SALE_USE_YN = 'Y' AND PSLI.LIVE_IDX = PPLI.LIVE_IDX
                      ) PRDT
				WHERE
					PCD.COUP_IDX = PCOUP.COUP_IDX
					AND PUC.DATA_IDX = PCD.DATA_IDX 
					AND PUB.COUP_IDX = PUC.COUP_IDX
					AND PUB.USER_IDX = PU.USER_IDX
					AND PUB.BUY_REFU_YN = 'N'
					AND PUB.BUY_PRDT_CD = PRDT.PRDT_CD
					AND PUC.COUP_USE_YN = 'Y'
				) MAIN
			WHERE
				COUP_IDX IS NOT NULL
	]]>
		<if test="coupNm not in {null, ''}">
			<![CDATA[
				AND COUP_NM LIKE '%${coupNm}%'
			]]>
		</if>
		<if test="userNm not in {null, ''}">
			<![CDATA[
				AND (USER_NM LIKE '%${userNm}%' OR USER_EMAIL LIKE '%${userNm}%')
			]]>
		</if>
		<if test="prdtNm not in {null, ''}">
			<![CDATA[
				AND PRDT_NM LIKE '%${prdtNm}%'
			]]>
		</if>
		<if test="coupStrDtm not in {null, ''}">
			<![CDATA[
				AND DATE_FORMAT( PUB_REG_DTM, '%Y-%m-%d' )  BETWEEN  #{coupStrDtm} AND #{coupEndDtm}
			]]>
		</if>
	<![CDATA[  

				
				]]>
			<if test="status not in {'LIST'}">
				<![CDATA[
		) A JOIN (SELECT @rownumA:=0) rownumA  
	) B JOIN (SELECT @rownumB:=0) rownumB ORDER BY NUM_DESC DESC
) C WHERE NUM_ASC BETWEEN '${startRow }' AND '${endRow }'
				]]>
			</if>
		<![CDATA[
		]]>
	</select>
	
	<!-- 로그인 체크 -->
	<select id="selectMngCuseListCnt" parameterType="hashmap" resultType="java.lang.Integer">
		<![CDATA[
			SELECT
				COUNT(0) AS CNT
			FROM (
			   SELECT
			   		PUB.BUY_IDX,
					PUC.COUP_IDX,
					PUC.DATA_IDX,
					PUC.SYS_REG_DTM AS COUP_REG_DTM,
					IFNULL(( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PCOUP.COUP_CATE_CD,1,7) ),'전체') AS COUP_CATE_CD,
					(CHAR_LENGTH(PCOUP.COUP_CATE_CD)-CHAR_LENGTH(REPLACE(PCOUP.COUP_CATE_CD,',',''))) AS CNT,
					
					PCOUP.COUP_NM,
					PU.USER_NM,
					PU.USER_EMAIL,

					PCOUP.COUP_UUID,
					PCOUP.COUP_KIND,
					
					DATE_FORMAT(PUB.SYS_REG_DTM, '%Y-%m-%d') AS PUB_REG_DTM,
					PUB.BUY_STAT,
					PUB.BUY_CD,
					DATE_FORMAT(COUP_STR_DTM, '%Y-%m-%d') AS COUP_STR_DTM,
					DATE_FORMAT(COUP_END_DTM, '%Y-%m-%d') AS COUP_END_DTM,
					DATE_FORMAT(PUC.SYS_REG_DTM, '%Y-%m-%d') AS PUC_REG_DTM,
					PRDT.PRDT_NM
				FROM
					PPM_USER_BUY PUB,
					PPM_COUP PCOUP,
					PPM_COUP_DATA PCD, 
					PPM_USER_COUP PUC,
					PPM_USER PU,
					(
					        SELECT 'FACE_IDX' AS PRDT_TYPE, PSF.CATE_IDX, PSF.FACE_IDX AS PRDT_IDX, PPF.FACE_CD AS PRDT_CD,(SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, FACE_PRIC_REAL AS PRDT_PRIC_REAL, FACE_IMG_UUID AS PRDT_UUID, 'FACE_IMG_UUID' AS PRDT_UUID_NM, 1 AS PRDT_CNT FROM PPM_SALE_FACE PSF, PPM_PRDT_FACE PPF WHERE SALE_USE_YN = 'Y' AND PSF.FACE_IDX = PPF.FACE_IDX
					          UNION ALL
					            SELECT 'LECT_IDX' AS PRDT_TYPE, PSLE.CATE_IDX, PSLE.LECT_IDX AS PRDT_IDX, PPLE.LECT_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLE.LECT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, LECT_PRIC_REAL AS PRDT_PRIC_REAL, LECT_UUID AS PRDT_UUID, 'LECT_UUID' AS PRDT_UUID_NM, ( SELECT COUNT(0) FROM PPM_PRDT_LECT_DATA PPLD, PPM_PRDT_VOD_DATA PPVD WHERE PPLD.LECT_IDX = PSLE.LECT_IDX AND PPLD.DATA_USE_YN = 'Y' AND PPLD.DATA_IDX = PPVD.DATA_IDX AND PPVD.DATA_USE_YN = 'Y' ) AS PRDT_CNT FROM PPM_SALE_LECT PSLE, PPM_PRDT_LECT PPLE WHERE SALE_USE_YN = 'Y' AND PSLE.LECT_IDX = PPLE.LECT_IDX
					          UNION ALL
					            SELECT 'CHAT_IDX' AS PRDT_TYPE, PSC.CATE_IDX, PSC.CHAT_IDX AS PRDT_IDX, PPC.CHAT_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, CHAT_PRIC_REAL AS PRDT_PRIC_REAL, CHAT_IMG_UUID AS PRDT_UUID, 'CHAT_IMG_UUID' AS PRDT_UUID_NM, 1 AS PRDT_CNT FROM PPM_SALE_CHAT PSC, PPM_PRDT_CHAT PPC WHERE SALE_USE_YN = 'Y' AND PSC.CHAT_IDX = PPC.CHAT_IDX
					          UNION ALL
					            SELECT 'MAIL_IDX' AS PRDT_TYPE, PSM.CATE_IDX, PSM.MAIL_IDX AS PRDT_IDX, PPM.MAIL_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, MAIL_PRIC_REAL AS PRDT_PRIC_REAL, MAIL_IMG_UUID AS PRDT_UUID, 'MAIL_IMG_UUID' AS PRDT_UUID_NM, PPM.MAIL_CNT AS PRDT_CNT FROM PPM_SALE_MAIL PSM, PPM_PRDT_MAIL PPM WHERE SALE_USE_YN = 'Y' AND PSM.MAIL_IDX = PPM.MAIL_IDX
					          UNION ALL
					            SELECT 'LIVE_IDX' AS PRDT_TYPE, PSLI.CATE_IDX, PSLI.LIVE_IDX AS PRDT_IDX, PPLI.LIVE_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM, LIVE_PRIC_REAL AS PRDT_PRIC_REAL, LIVE_IMG_UUID AS PRDT_UUID, 'LIVE_IMG_UUID' AS PRDT_UUID_NM, 1 AS PRDT_CNT FROM PPM_SALE_LIVE PSLI, PPM_PRDT_LIVE PPLI WHERE SALE_USE_YN = 'Y' AND PSLI.LIVE_IDX = PPLI.LIVE_IDX
                      ) PRDT
				WHERE
					PCD.COUP_IDX = PCOUP.COUP_IDX
					AND PUC.DATA_IDX = PCD.DATA_IDX 
					AND PUB.COUP_IDX = PUC.COUP_IDX
					AND PUB.USER_IDX = PU.USER_IDX
					AND PUB.BUY_REFU_YN = 'N'
					AND PUB.BUY_PRDT_CD = PRDT.PRDT_CD
					AND PUC.COUP_USE_YN = 'Y'
				) MAIN
			WHERE
				COUP_IDX IS NOT NULL
	]]>
		<if test="coupNm not in {null, ''}">
			<![CDATA[
				AND COUP_NM LIKE '%${coupNm}%'
			]]>
		</if>
		<if test="userNm not in {null, ''}">
			<![CDATA[
				AND (USER_NM LIKE '%${userNm}%' OR USER_EMAIL LIKE '%${userNm}%')
			]]>
		</if>
		<if test="prdtNm not in {null, ''}">
			<![CDATA[
				AND PRDT_NM LIKE '%${prdtNm}%'
			]]>
		</if>
		<if test="coupStrDtm not in {null, ''}">
			<![CDATA[
				AND DATE_FORMAT( PUB_REG_DTM, '%Y-%m-%d' )  BETWEEN  #{coupStrDtm} AND #{coupEndDtm}
			]]>
		</if>
	<![CDATA[  
				    
		]]>
	</select>
	
	<select id="selectMngCuseDetail" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT 
				COUP_SERV_CD,
				IFNULL( ( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PC.COUP_SERV_CD ), '전체' ) AS COUP_SERV_NM, 
				
				CONCAT( DATE_FORMAT(COUP_STR_DTM, '%Y-%m-%d') , ' ~ ' , DATE_FORMAT(COUP_END_DTM, '%Y-%m-%d') ) AS COUP_PERIOD,
				DATEDIFF(COUP_END_DTM, COUP_STR_DTM) AS COUP_PERIOD_DIFF,
				
				COUP_ISSU,
					  
				(
					CASE
						WHEN PUB.BUY_PRDT_CD LIKE '%EN%' THEN '1:1이메일상담'
						WHEN PUB.BUY_PRDT_CD LIKE '%VL%' THEN 'VOD'
						WHEN PUB.BUY_PRDT_CD LIKE '%FN%' THEN '1:1화상상담'
						WHEN PUB.BUY_PRDT_CD LIKE '%CN%' THEN '1:1채팅상담'
						WHEN PUB.BUY_PRDT_CD LIKE '%LN%' THEN 'LIVE CLASS'
					END
				) AS PRDT_TYPE,
				(
					CASE
						WHEN PUB.BUY_PRDT_CD LIKE '%VL%' THEN (
								SELECT DISTINCT INFO_PRDT_TITL1 FROM PPM_INFO_PRDT
								WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PUB.CATE_IDX AND PRDT_CD = PUB.BUY_PRDT_CD )
						WHEN PUB.BUY_PRDT_CD LIKE '%LN%' THEN (
								SELECT DISTINCT INFO_PRDT_TITL1 FROM PPM_INFO_PRDT
								WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PUB.CATE_IDX AND PRDT_CD = PUB.BUY_PRDT_CD )
						ELSE (
								SELECT DISTINCT INFO_PRDT_TITL1 FROM PPM_INFO_PRDT
								WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PUB.CATE_IDX AND PRDT_CD = CONCAT('COACHING',CATE_IDX) )
					END
				) AS INFO_PRDT_TITL1,
				(
					CASE
						WHEN PUB.BUY_PRDT_CD LIKE '%VL%' THEN (
								SELECT DISTINCT INFO_PRDT_TITL2 FROM PPM_INFO_PRDT
								WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PUB.CATE_IDX AND PRDT_CD = PUB.BUY_PRDT_CD )
						WHEN PUB.BUY_PRDT_CD LIKE '%LN%' THEN (
								SELECT DISTINCT INFO_PRDT_TITL2 FROM PPM_INFO_PRDT
								WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PUB.CATE_IDX AND PRDT_CD = PUB.BUY_PRDT_CD )
						ELSE (
								SELECT DISTINCT INFO_PRDT_TITL2 FROM PPM_INFO_PRDT
								WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PUB.CATE_IDX AND PRDT_CD = CONCAT('COACHING',CATE_IDX) )
					END
				) AS INFO_PRDT_TITL2,
					
				P_CODE.CODE_NM AS P_CODE_NM,
				M_CODE.CODE_NM AS M_CODE_NM,
				FORMAT( (PRDT.PRDT_PRIC_REAL - BUY_PRIC), 0 ) AS COUP_SALE,
				FORMAT( BUY_PRIC, 0 ) AS BUY_PRIC
				
			FROM 
				PPM_COUP PC
					LEFT JOIN PPM_COUP_DATA PCD ON PCD.COUP_IDX = PC.COUP_IDX
					LEFT JOIN PPM_USER_COUP PUC ON PUC.DATA_IDX = PCD.DATA_IDX
					LEFT JOIN PPM_USER_BUY PUB ON PUB.COUP_IDX = PUC.COUP_IDX
					LEFT JOIN PPM_SALE_CD_VIEW PRDT ON PUB.BUY_PRDT_CD = PRDT.PRDT_CD
					LEFT JOIN PPM_CATE P_CATE ON PUB.CATE_IDX = P_CATE.CATE_IDX
					LEFT JOIN PPM_CODE P_CODE ON SUBSTR(P_CATE.CODE_ID,1,5) = P_CODE.CODE_ID
					LEFT JOIN PPM_CODE M_CODE ON P_CATE.CODE_ID = M_CODE.CODE_ID
					
			WHERE 
				PUC.COUP_USE_YN = 'Y'
				AND PUC.COUP_IDX = #{coupIdx}
		]]>
	</select>
	
	<insert id="insertMngCuseData" parameterType="hashmap">
		<![CDATA[
			INSERT INTO 
				PPM_SITE_NOTI (
					NOTI_TITL, 
					NOTI_CD,
					NOTI_CNTN, 
					NOTI_UUID, 
					NOTI_OPEN_YN, 
					NOTI_USE_YN, 
					NOTI_DEL_YN,
					
					SYS_REG_IDX, 
					SYS_REG_DTM, 
					SYS_MOD_IDX, 
					SYS_MOD_DTM
				) VALUES (
					'${notiTitl} ', 
					'${notiCd}', 
					'${notiCntn}',
					'${notiUuid} ',
					'${notiOpenYn}', 
					'${notiUseYn}', 
					
					'N',
					
					#{mngLoginIdx}, 
					DATE_FORMAT(NOW(), '%Y%m%d%H%i%S'), 
					#{mngLoginIdx}, 
					DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
				)
		]]>
	</insert>
	
	<update id="updateMngCuseData" parameterType="hashmap">
		<![CDATA[
			UPDATE
		    	PPM_SITE_NOTI 
    		SET 
    			NOTI_TITL = '${notiTitl}', 
    			NOTI_CD = '${notiCd}', 
    			NOTI_CNTN = #{notiCntn},
    			NOTI_UUID = '${notiUuid}',
    			NOTI_OPEN_YN = '${notiOpenYn}', 
    			NOTI_USE_YN = '${notiUseYn}', 
    			
    			SYS_MOD_IDX =#{mngLoginIdx}, 
				SYS_MOD_DTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
	    	WHERE 
	    		NOTI_IDX = #{notiIdx}

		]]>
	</update>


	<update id="deleteMngCuseData" parameterType="hashmap" >
		<![CDATA[
			    
		    UPDATE
		    	PPM_SITE_NOTI 
    		SET 
    			NOTI_DEL_YN = 'Y',
    			SYS_MOD_IDX =#{mngLoginIdx}, 
				SYS_MOD_DTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
	    	WHERE 
	    		NOTI_IDX = #{notiIdx}
		]]>
	</update>
	
	
</mapper>
