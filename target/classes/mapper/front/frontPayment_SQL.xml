<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="frontPayment">

<select id="selectFrontPaymentList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
		SELECT
				*
			FROM (
			
					SELECT
					
					PRDT.PRDT_CD,
					CONCAT( PRDT.PRDT_NM1, ' ',PRDT.PRDT_NM2 )  AS PRDT_NM,
					PRDT_NM1,
					PRDT_NM2,
					( SELECT USER_NM FROM PPM_USER WHERE USER_IDX = ( SELECT USER_IDX FROM PPM_CATE WHERE CATE_IDX = PRDT.CATE_IDX ) ) AS USER_NM,
					PRDT.PRDT_TYPE,
					
					(
						CASE PRDT_TYPE
							WHEN '1:1화상상담' THEN ''
							WHEN 'VOD' THEN 
												CONCAT(CONVERT((
													SELECT COUNT(0) FROM PPM_PRDT_LECT_DATA PPLD, PPM_PRDT_VOD_DATA PPVD
													WHERE PPLD.LECT_IDX = PRDT.PRDT_IDX AND PPLD.VOD_IDX = PPVD.VOD_IDX AND PPLD.DATA_USE_YN = 'Y' AND PPVD.DATA_USE_YN = 'Y' 
												), CHAR), ' 개')
							WHEN '1:1채팅상담' THEN ''
							WHEN '1:1이메일상담' THEN CONCAT(( SELECT MAIL_CNT FROM PPM_PRDT_MAIL WHERE MAIL_CD = PRDT.PRDT_CD ), ' 건')
							WHEN '라이브클래스' THEN ''
						END
					) AS PRDT_CNT,
					
					FORMAT(PRDT_PRIC , 0) AS PRDT_PRIC,
					FORMAT(PRDT_PRIC_REAL , 0) AS PRDT_PRIC_REAL,
					PRDT_PRIC AS PRDT_PRIC_NOCOMMA,
					PRDT_PRIC_REAL AS PRDT_PRIC_REAL_NOCOMMA,
					
					PRDT.TIME_IDX,
					PRDT_TIME,
					PRDT.CATE_IDX,
					(SELECT PC2.CODE_NM FROM PPM_CODE PC2 WHERE  PC2.CODE_PARENT_IDX = 0 AND SUBSTR( PC2.CODE_ID, 1, 5 ) = SUBSTR( PC.CODE_ID, 1, 5 )  ) P_CODE_NM ,
					
					(
						CASE
							WHEN PRDT.PRDT_CD LIKE '%VL%' THEN CONCAT(  PRDT.PRDT_TIME, '일' ) 
							WHEN PRDT.PRDT_CD LIKE '%FN%' THEN CONCAT(   PRDT.PRDT_TIME, '분' ) 
							WHEN PRDT.PRDT_CD LIKE '%CN%' THEN CONCAT(   PRDT.PRDT_TIME, '분' ) 
							WHEN PRDT.PRDT_CD LIKE '%EN%' THEN CONCAT(   PRDT.PRDT_TIME, '회' ) 
							WHEN PRDT.PRDT_CD LIKE '%LN%' THEN CONCAT(   PRDT.PRDT_TIME, '분' ) 
						END 
					) AS PRDT_USE_DTM,
					(
						CASE
							WHEN PRDT.PRDT_CD LIKE '%VL%' THEN (
									SELECT DISTINCT INFO_PRDT_TITL1 FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = PRDT.PRDT_CD )
							WHEN PRDT.PRDT_CD LIKE '%LN%' THEN (
									SELECT DISTINCT INFO_PRDT_TITL1 FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = PRDT.PRDT_CD )
							ELSE (
									SELECT DISTINCT INFO_PRDT_TITL1 FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = CONCAT('COACHING',CATE_IDX) )
						END
					) AS INFO_PRDT_TITL1,
					(
						CASE
							WHEN PRDT.PRDT_CD LIKE '%VL%' THEN (
									SELECT DISTINCT INFO_PRDT_TITL2 FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = PRDT.PRDT_CD )
							WHEN PRDT.PRDT_CD LIKE '%LN%' THEN (
									SELECT DISTINCT INFO_PRDT_TITL2 FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = PRDT.PRDT_CD )
							ELSE (
									SELECT DISTINCT INFO_PRDT_TITL2 FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = CONCAT('COACHING',CATE_IDX) )
						END
					) AS INFO_PRDT_TITL2,
					(
						CASE
							WHEN PRDT.PRDT_CD LIKE '%VL%' THEN (
									SELECT DISTINCT INFO_TUMB_UUID FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = PRDT.PRDT_CD )
							WHEN PRDT.PRDT_CD LIKE '%LN%' THEN (
									SELECT DISTINCT INFO_TUMB_UUID FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = PRDT.PRDT_CD )
							ELSE (
									SELECT DISTINCT INFO_TUMB_UUID FROM PPM_INFO_PRDT
									WHERE INFO_USE_YN = 'Y' AND INFO_ORDE = 0 AND CATE_IDX = PRDT.CATE_IDX AND PRDT_CD = CONCAT('COACHING',CATE_IDX) )
						END
					) AS INFO_TUMB_UUID,
					'INFO_TUMB_UUID_FILE' AS INFO_TUMB_UUID_NM,
			
					MAIN_OPEN_YN,
					DATE_FORMAT(MAIN_OPEN_DTM, '%Y-%m-%d %H:%i:%s') AS MAIN_OPEN_DTM,
					IFNULL( DATE_FORMAT(MAIN_OPEN_DTM, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT('9999-12-31', '%Y-%m-%d %H:%i:%s') ) AS MAIN_OPEN_DTM_ORDR,
					SUBMAIN_OPEN_YN,
					DATE_FORMAT(SUBMAIN_OPEN_DTM, '%Y-%m-%d %H:%i:%s') AS SUBMAIN_OPEN_DTM,
					IFNULL(DATE_FORMAT(SUBMAIN_OPEN_DTM, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT('9999-12-31', '%Y-%m-%d %H:%i:%s') ) AS SUBMAIN_OPEN_DTM_ORDR,
					PRDT.PRDT_CD AS PRDT_REG_CD,
					DEAL_DISC_PRIC,
					DEAL_REAL_PRIC,
					( CASE WHEN DATEDIFF( MAIN_OPEN_DTM, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') ) > -1 THEN 1 ELSE 0 END ) AS MAIN_OPEN_DAY,
					( CASE WHEN TIMEDIFF( MAIN_OPEN_DTM, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') ) > '00:00:00' THEN 1 ELSE 0 END ) AS MAIN_OPEN_TIME,
					( CASE WHEN DATEDIFF( SUBMAIN_OPEN_DTM, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') ) > -1 THEN 1 ELSE 0 END ) AS SUBMAIN_OPEN_DAY,
					( CASE WHEN TIMEDIFF( SUBMAIN_OPEN_DTM, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') ) > '00:00:00' THEN 1 ELSE 0 END ) AS SUBMAIN_OPEN_TIME
				FROM
					PPM_CATE PC,
					PPM_USER PU,
					(
					SELECT '1:1화상상담' AS PRDT_TYPE, PSF.CATE_IDX, PSF.FACE_IDX AS PRDT_IDX,  
						IFNULL ( (SELECT TIME_IDX FROM PPM_PRDT_TIME PPT WHERE PPT.FACE_IDX = PPF.FACE_IDX AND PPT.TIME_USE_YN = 'Y' AND PPT.TIME_IDX IN ( ${timeIdx} ) ORDER BY PPT.TIME_RUN  LIMIT 1 ), '' ) AS TIME_IDX , 
						
						(SELECT GROUP_CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN,',,') FROM PPM_PRDT_TIME PPT WHERE PPT.FACE_IDX = PPF.FACE_IDX AND PPT.TIME_USE_YN = 'Y' AND PPT.TIME_IDX IN ( ${timeIdx} ) ORDER BY PPT.TIME_RUN ) AS PRDT_TIME, PPF.FACE_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, FACE_PRIC_REAL AS PRDT_PRIC_REAL, FACE_PRIC AS PRDT_PRIC 
				        FROM PPM_SALE_FACE PSF, PPM_PRDT_FACE PPF WHERE SALE_USE_YN = 'Y' AND PSF.FACE_IDX = PPF.FACE_IDX AND PPF.FACE_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'VOD' AS PRDT_TYPE, PSLE.CATE_IDX, PSLE.LECT_IDX AS PRDT_IDX, '' AS TIME_IDX, PPLE.LECT_DTM AS PRDT_TIME, PPLE.LECT_CD AS PRDT_CD,(SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLE.LECT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLE.LECT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, LECT_PRIC_REAL AS PRDT_PRIC_REAL, LECT_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_LECT PSLE, PPM_PRDT_LECT PPLE WHERE SALE_USE_YN = 'Y' AND PPLE.LECT_USE_YN = 'Y' AND PSLE.LECT_IDX = PPLE.LECT_IDX AND PPLE.LECT_USE_YN = 'Y'
				      UNION ALL
				        SELECT '1:1채팅상담' AS PRDT_TYPE, PSC.CATE_IDX, PSC.CHAT_IDX AS PRDT_IDX, 
				        IFNULL ( (SELECT TIME_IDX FROM PPM_PRDT_TIME PPT WHERE PPT.CHAT_IDX = PPC.CHAT_IDX AND PPT.TIME_USE_YN = 'Y' AND PPT.TIME_IDX IN ( ${timeIdx} ) ORDER BY PPT.TIME_RUN  LIMIT 1 ), '' ) AS TIME_IDX , 
				        
				        (SELECT GROUP_CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN,',,') FROM PPM_PRDT_TIME PPT WHERE PPT.CHAT_IDX = PPC.CHAT_IDX AND PPT.TIME_USE_YN = 'Y' AND PPT.TIME_IDX IN ( ${timeIdx} ) ORDER BY PPT.TIME_RUN ) AS PRDT_TIME, PPC.CHAT_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2,  CHAT_PRIC_REAL AS PRDT_PRIC_REAL, CHAT_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_CHAT PSC, PPM_PRDT_CHAT PPC WHERE SALE_USE_YN = 'Y' AND PSC.CHAT_IDX = PPC.CHAT_IDX AND PPC.CHAT_USE_YN = 'Y'
				      UNION ALL
				        SELECT '1:1이메일상담' AS PRDT_TYPE, PSM.CATE_IDX, PSM.MAIL_IDX AS PRDT_IDX, '' AS TIME_IDX, DATE_FORMAT( ( SELECT DATE_ADD(DATE_FORMAT( NOW(), '%Y-%m-%d %H:%i' ), INTERVAL MAIL_DTM_CNT DAY) FROM PPM_PRDT_MAIL WHERE MAIL_CD = PPM.MAIL_CD ), '%Y-%m-%d' ) AS PRDT_TIME, PPM.MAIL_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, MAIL_PRIC_REAL AS PRDT_PRIC_REAL, MAIL_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_MAIL PSM, PPM_PRDT_MAIL PPM WHERE SALE_USE_YN = 'Y' AND PSM.MAIL_IDX = PPM.MAIL_IDX AND PPM.MAIL_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'LIVE CLASS' AS PRDT_TYPE, PSLI.CATE_IDX, PSLI.LIVE_IDX AS PRDT_IDX, 
				        IFNULL ( (SELECT TIME_IDX FROM PPM_PRDT_TIME PPT WHERE PPT.LIVE_IDX = PPLI.LIVE_IDX AND PPT.TIME_USE_YN = 'Y' AND PPT.TIME_IDX IN ( ${timeIdx} ) ORDER BY PPT.TIME_RUN  LIMIT 1 ), '' ) AS TIME_IDX , 
				        
				        (SELECT GROUP_CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN,',,') FROM PPM_PRDT_TIME PPT WHERE PPT.LIVE_IDX = PPLI.LIVE_IDX AND PPT.TIME_USE_YN = 'Y' AND PPT.TIME_IDX IN ( ${timeIdx} ) ORDER BY PPT.TIME_RUN ) AS PRDT_TIME, PPLI.LIVE_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, LIVE_PRIC_REAL AS PRDT_PRIC_REAL, LIVE_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_LIVE PSLI, PPM_PRDT_LIVE PPLI WHERE SALE_USE_YN = 'Y' AND PSLI.LIVE_IDX = PPLI.LIVE_IDX AND PPLI.LIVE_USE_YN = 'Y'
					) PRDT
					LEFT OUTER JOIN PPM_TIME_DEAL PM
						ON PM.PRDT_CD = PRDT.PRDT_CD
						AND SUBMAIN_OPEN_YN = 'Y' AND DEAL_DISC_PRIC IS NOT NULL AND DEAL_REAL_PRIC IS NOT NULL
						AND DATEDIFF( SUBMAIN_OPEN_DTM, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') ) > -1 AND TIMEDIFF( SUBMAIN_OPEN_DTM, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s') ) > '00:00:00'
					
				WHERE
					
					PRDT.CATE_IDX = PC.CATE_IDX
					AND PC.USER_IDX = PU.USER_IDX
					AND PRDT.PRDT_CD IN (${baskArr})
				) MAIN
		]]>
</select>

<select id="selectFrontUserCoupList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			
			 
		 SELECT 
			PUC.COUP_IDX ,
			PUC.DATA_IDX ,
			PUC.USER_IDX ,
			DATE_FORMAT( PUC.SYS_REG_DTM , '%Y-%m-%d'),
			PCD.COUP_DATA_CD ,
			(SELECT CODE_NM FROM PPM_CODE PC WHERE PC.CODE_ID = PC.COUP_DISC_CD) COUP_DISC_CD_NM,
			PC.COUP_NM ,
			PC.COUP_DISC ,
			PC.COUP_DISC_CD ,
			DATE_FORMAT( PC.COUP_END_DTM , '%Y-%m-%d'),
			PC.COUP_MINI ,
			PC.COUP_MINI_TYPE ,
			PC.COUP_CATE_CD ,
			DATE_FORMAT( PC.COUP_STR_DTM , '%Y-%m-%d'),
			PC.COUP_UUID 
				FROM
					PPM_USER_COUP PUC , PPM_COUP_DATA PCD , PPM_COUP PC 
						WHERE
							PUC.DATA_IDX  = PCD.DATA_IDX 
							AND PCD.COUP_IDX  = PC.COUP_IDX 
							AND PUC.COUP_DEL_YN  = 'N'
							AND PUC.COUP_USE_YN  = 'N'
							AND PC.COUP_USE_YN = 'Y'
							AND PCD.DATA_USE_YN  = 'Y'
							AND PUC.USER_IDX = #{frontLoginIdx}
		 					-- AND DATE_FORMAT(NOW(), '%Y-%m-%d') <= DATE_FORMAT( DATE_ADD( PUC.SYS_REG_DTM, INTERVAL PC.COUP_USE_DATE DAY ) , '%Y-%m-%d' )  	
		]]>
	</select>
	
	<insert id="insertFrontUserPaymentData" parameterType="hashmap">
		<![CDATA[
			INSERT INTO 
			
				PPM_USER_BUY
					(
					CATE_IDX,
					USER_IDX,
	
					TIME_IDX,
					
					COUP_IDX,
					BUY_PRDT_CD,
					BUY_CD, 
					BUY_ORDER_NUMBER,
					BUY_NO,
					BUY_TYPE,
					BUY_PRIC, 
					BUY_ACCO_NO, 
					BUY_BANK_CD,
					
					BUY_STAT,
					CASH_RECEIPT,
					BUY_REFU_YN,
					BUY_COMP_YN,
					
					CASH_RECE_WHY,
					CASH_RECE_SID,
					CASH_RECEIPT_NM,
					CASH_RECE_KIND,
					
					
					REAL_PAY_PRIC,
					REAL_DISC_PRIC,
					
					
					SYS_REG_IDX, 
					SYS_REG_DTM,
					SYS_MOD_IDX,
					SYS_MOD_DTM
					)
					
					VALUES(
					(
						CASE
							WHEN #{prdtCd} LIKE '%VL%' THEN ( SELECT CATE_IDX FROM PPM_PRDT_LECT WHERE LECT_CD = #{prdtCd} )
							WHEN #{prdtCd} LIKE '%FN%' THEN ( SELECT CATE_IDX FROM PPM_PRDT_FACE WHERE FACE_CD = #{prdtCd} )
							WHEN #{prdtCd} LIKE '%CN%' THEN ( SELECT CATE_IDX FROM PPM_PRDT_CHAT WHERE CHAT_CD = #{prdtCd} )
							WHEN #{prdtCd} LIKE '%EN%' THEN ( SELECT CATE_IDX FROM PPM_PRDT_MAIL WHERE MAIL_CD = #{prdtCd} )
							WHEN #{prdtCd} LIKE '%LN%' THEN ( SELECT CATE_IDX FROM PPM_PRDT_LIVE WHERE LIVE_CD = #{prdtCd} )
						END
					),
					
					#{frontLoginIdx},
					
						]]>
		<choose>
			<when test="timeIdx not in {null, ''}">
			
			<![CDATA[	
						#{timeIdx},
			]]>
			</when>
			<otherwise>
			<![CDATA[	
						'0',
			]]>
			</otherwise>
		</choose>
				<![CDATA[	
					
					
					#{coupIdx},
					#{prdtCd},
					(
											SELECT
													CONCAT(
														CONCAT(
															'${buyCd}',
															(
																CASE
																	WHEN COUNT(PPL.BUY_IDX) BETWEEN 0 AND 9999 THEN 'A'
																	WHEN COUNT(PPL.BUY_IDX) > 9999 THEN CHAR(ASCII('A') + FLOOR(COUNT(PPL.BUY_IDX)/10000))
																	WHEN COUNT(PPL.BUY_IDX) = 0 THEN 'A'
																END
															)
														),
														(
															CASE 
																WHEN COUNT(PPL.BUY_IDX) BETWEEN 0 AND 9999 THEN LPAD( COUNT(PPL.BUY_IDX)+1 , 4 , 0)
																WHEN COUNT(PPL.BUY_IDX) > 9999 THEN LPAD( COUNT(PPL.BUY_IDX)+1 - 9999 , 4 , 0)
																WHEN COUNT(PPL.BUY_IDX) = 0 THEN '0001'
															END
														)
													)
											FROM
												PPM_USER_BUY PPL
											WHERE
												BUY_CD LIKE '%${buyCd}%'
					),
					#{buyOrderNumber},
					#{buyNo},
					#{buyType},
					#{buyPric},
					#{buyAccoNo},
					#{buyBankCd},
					
					'입금대기',
					#{cashReceipt},
					'N',
					'N',
		]]>
		<if test="cashReceipt not in {null, ''}">
		
				<![CDATA[	
					#{cashReceWhy},
					#{cashReceSid},
					#{cashReceiptNm},
					#{cashReceKind},
		]]>
		</if>
				<![CDATA[	
					
					#{realPayPric},
					#{realDiscPric},
					
					'${frontLoginIdx}', 
					DATE_FORMAT(NOW(), '%Y%m%d%H%i%S'), 
					'${frontLoginIdx}', 
					DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
					)
			
		]]>
	
	</insert>

	<update id="updateFrontUserPaymentCashData" parameterType="hashmap">
		<![CDATA[
			UPDATE  
			
				PPM_USER_BUY
					SET
				 	 COUP_IDX = #{coupIdx} ,
					 BUY_TYPE = #{buyType},
					 BUY_PRIC = #{buyPric}, 
					
					 CASH_RECEIPT = #{cashReceipt},
					 CASH_RECE_WHY = #{cashReceWhy},
					 CASH_RECE_SID = #{cashReceSid},
					 CASH_RECEIPT_NM = #{cashReceiptNm},
					 CASH_RECE_KIND = #{cashReceKind},
					
					BUY_CD =(  SELECT S FROM (
											SELECT
													CONCAT(
														CONCAT(
															'${buyCd}',
															(
																CASE
																	WHEN COUNT(PPL.BUY_IDX) BETWEEN 0 AND 9999 THEN 'A'
																	WHEN COUNT(PPL.BUY_IDX) > 9999 THEN CHAR(ASCII('A') + FLOOR(COUNT(PPL.BUY_IDX)/10000))
																	WHEN COUNT(PPL.BUY_IDX) = 0 THEN 'A'
																END
															)
														),
														(
															CASE 
																WHEN COUNT(PPL.BUY_IDX) BETWEEN 0 AND 9999 THEN LPAD( COUNT(PPL.BUY_IDX)+1 , 4 , 0)
																WHEN COUNT(PPL.BUY_IDX) > 9999 THEN LPAD( COUNT(PPL.BUY_IDX)+1 - 9999 , 4 , 0)
																WHEN COUNT(PPL.BUY_IDX) = 0 THEN '0001'
															END
														)
													) AS S
											FROM
												PPM_USER_BUY PPL
											WHERE
												BUY_CD LIKE '%${buyCd}%'
					) AS A ),
					
					
					REAL_PAY_PRIC = #{realPayPric},
					REAL_DISC_PRIC = #{realDiscPric},
										
					
					 SYS_MOD_IDX ='${frontLoginIdx}',
					 SYS_MOD_DTM =DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
					
					WHERE 
					 	BUY_ORDER_NUMBER = 	#{buyOrderNumber}
						AND BUY_PRDT_CD = #{prdtCd}
						AND BUY_NO IS NULL
						AND SYS_REG_IDX = '${frontLoginIdx}'
						AND BUY_STAT = '입금대기'
		]]>
	
	</update>
	
	<update id="updateFrontUserPaymentData" parameterType="hashmap">
		<![CDATA[
			UPDATE PPM_USER_BUY
				SET
					
					BUY_NO = #{buyNo},
					BUY_TYPE = #{buyType},
					BUY_PRIC = #{buyPric},
					BUY_ACCO_NO = #{buyAccoNo},
					BUY_BANK_CD = #{buyBankCd},
					
					BUY_HALBU = #{buyHalbu},
					BUY_CARD_NO = #{buyCardNo},
					
		]]>
		<if test="buyStat not in {'', null}">
		<![CDATA[
					BUY_STAT = #{buyStat},
		]]>
		</if>
		<if test="cbtrno not in {'', null}">
		<![CDATA[
					CASH_RECE_NO = #{cbtrno},
		]]>
		</if>
		<![CDATA[

					CASH_RECEIPT = #{cashReceipt},
					BUY_COMP_YN = #{buyCompYn},
		]]>
		<if test='buyType != "가상계좌발급" '>
		<![CDATA[	
					BUY_COMP_DTM = DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%S'),
		]]>
		</if>
		<![CDATA[
					
					SYS_MOD_IDX = '${frontLoginIdx}', 
					SYS_MOD_DTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
					
					WHERE 
						BUY_ORDER_NUMBER = 	#{buyOrderNumber}
						AND BUY_PRDT_CD = #{prdtCd}
						AND BUY_NO IS NULL
						AND SYS_REG_IDX = '${frontLoginIdx}'
						AND BUY_STAT = '입금대기'
		]]>
	
	</update>
	

	<select id="selectFrontUserPaymentData" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT 
				COUNT(*) CNT
				FROM 
			
					PPM_USER_BUY
					
						WHERE 
							
						BUY_PRDT_CD = #{prdtCd}
						AND BUY_ORDER_NUMBER = 	#{buyOrderNumber}
						AND BUY_NO IS NULL
						AND BUY_STAT = '입금대기'
						AND SYS_REG_IDX = '${frontLoginIdx}'
			]]>
			<if test="timeIdx not in {'', null}">
			<![CDATA[	
						AND TIME_IDX = #{timeIdx}
			]]>
			</if>
	</select>

	<update id="deleteFrontPaymentBask" parameterType="hashmap" >
		<![CDATA[
			UPDATE PPM_PRDT_BASK		
				SET BASK_USE_YN = 'N',
				SYS_MOD_IDX = #{frontLoginIdx},
				SYS_MOD_DTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
				WHERE 
					BASK_PRDT_CD IN ( ${payArr} )
					AND USER_IDX = 	#{frontLoginIdx}
					AND BASK_TYPE = 'B'
		]]>
	
	</update>

	<update id="deleteFrontPaymentCoup" parameterType="hashmap" >
		<![CDATA[
			UPDATE PPM_USER_COUP		
				SET COUP_USE_YN = 'Y',
				SYS_MOD_IDX = #{frontLoginIdx},
				SYS_MOD_DTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
				WHERE 
					COUP_IDX IN ( ${coupArr} )
						
		]]>
	
	</update>

	<select id="selectFrontPaymentBankList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
						CODE_ID,
						CODE_NM
					FROM
						PPM_CODE CODE
					WHERE
						CODE_ID LIKE 'BK%'
		]]>	
	</select>

	<select id="selectFrontPaymentUserPayToken" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
						IFNULL( KSNET_SVC_TKN, "" ) AS KSNET_SVC_TKN
					FROM
						PPM_USER 
					WHERE
						USER_IDX = #{loginIdx}
		]]>	
	</select>
	
	
		
<select id="selectUserPrdtCoupList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	 SELECT 
			PUC.COUP_IDX ,
			PUC.DATA_IDX ,
			PUC.USER_IDX ,
			DATE_FORMAT( PUC.SYS_REG_DTM , '%Y-%m-%d') SYS_REG_DTM,
			PCD.COUP_DATA_CD ,
			
			(SELECT CODE_NM FROM PPM_CODE PC WHERE PC.CODE_ID = PC.COUP_DISC_CD) COUP_DISC_CD_NM,
			PC.COUP_NM ,
			PC.COUP_DISC ,
			PC.COUP_DISC_CD ,
			
			DATE_FORMAT( PC.COUP_END_DTM , '%Y-%m-%d') COUP_END_DTM,
			PC.COUP_MINI ,
			PC.COUP_MINI_TYPE ,
			PC.COUP_CATE_CD ,
			PC.COUP_SERV_CD,
			PC.COUP_CATE_CD,
			
			DATE_FORMAT( PC.COUP_STR_DTM , '%Y-%m-%d') COUP_STR_DTM,
			PC.COUP_UUID ,
			DATE_FORMAT( DATE_ADD( PUC.SYS_REG_DTM, INTERVAL PC.COUP_USE_DATE DAY ) , '%Y-%m-%d' ) COUP_END_DATE ,
			PUC.SYS_REG_DTM COUP_GET_DATE
				FROM
					PPM_USER_COUP PUC , PPM_COUP_DATA PCD , PPM_COUP PC
					
						WHERE
							PUC.DATA_IDX  = PCD.DATA_IDX 
							AND PCD.COUP_IDX  = PC.COUP_IDX 
							AND PUC.COUP_DEL_YN  = 'N'
							AND PUC.COUP_USE_YN  = 'N'
							AND PC.COUP_USE_YN = 'Y'
							AND PCD.DATA_USE_YN  = 'Y'
							AND PUC.USER_IDX = #{frontLoginIdx}
						 	-- AND DATE_FORMAT(NOW(), '%Y-%m-%d') <= DATE_FORMAT( DATE_ADD( PUC.SYS_REG_DTM, INTERVAL PC.COUP_USE_DATE DAY ) , '%Y-%m-%d' )  	
						 	AND DATEDIFF( DATE_ADD( DATE_FORMAT(PUC.SYS_REG_DTM, '%Y-%m-%d') , INTERVAL PC.COUP_USE_DATE DAY ) , NOW()) > 0
	
]]>
</select>
	
	<select id="selectUsePrdtList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT 
	PRDT.*,
	PC.CODE_ID ,
	(SELECT CODE_NM FROM PPM_CODE WHERE PPM_CODE.CODE_ID = PC.CODE_ID) CODE_NM,
	(SELECT CODE_NM FROM PPM_CODE WHERE PPM_CODE.CODE_ID = SUBSTRING( PC.CODE_ID, 1,5 ))  P_CODE_NM
	FROM 
		PPM_CATE PC ,
					(
						SELECT 'PRD03' AS PRDT_TYPE, 'PRD01' AS PRDT_TYPE2 , PSF.CATE_IDX, PSF.FACE_IDX AS PRDT_IDX, (SELECT CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN) FROM PPM_PRDT_TIME PPT WHERE PPT.FACE_IDX = PPF.FACE_IDX AND PPT.TIME_USE_YN = 'Y' ORDER BY PPT.TIME_RUN LIMIT 1) AS PRDT_TIME, PPF.FACE_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, FACE_PRIC_REAL AS PRDT_PRIC_REAL, FACE_PRIC AS PRDT_PRIC 
				  	    FROM PPM_SALE_FACE PSF, PPM_PRDT_FACE PPF WHERE SALE_USE_YN = 'Y' AND PSF.FACE_IDX = PPF.FACE_IDX AND PPF.FACE_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'PRD06' AS PRDT_TYPE, '' AS PRDT_TYPE2 , PSLE.CATE_IDX, PSLE.LECT_IDX AS PRDT_IDX, PPLE.LECT_DTM AS PRDT_TIME, PPLE.LECT_CD AS PRDT_CD,(SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLE.LECT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLE.LECT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, LECT_PRIC_REAL AS PRDT_PRIC_REAL, LECT_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_LECT PSLE, PPM_PRDT_LECT PPLE WHERE SALE_USE_YN = 'Y' AND PPLE.LECT_USE_YN = 'Y' AND PSLE.LECT_IDX = PPLE.LECT_IDX AND PPLE.LECT_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'PRD02' AS PRDT_TYPE, 'PRD01' AS PRDT_TYPE2 , PSC.CATE_IDX, PSC.CHAT_IDX AS PRDT_IDX, (SELECT CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN) FROM PPM_PRDT_TIME PPT WHERE PPT.CHAT_IDX = PPC.CHAT_IDX AND PPT.TIME_USE_YN = 'Y' ORDER BY PPT.TIME_RUN LIMIT 1) AS PRDT_TIME, PPC.CHAT_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2,  CHAT_PRIC_REAL AS PRDT_PRIC_REAL, CHAT_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_CHAT PSC, PPM_PRDT_CHAT PPC WHERE SALE_USE_YN = 'Y' AND PSC.CHAT_IDX = PPC.CHAT_IDX AND PPC.CHAT_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'PRD04' AS PRDT_TYPE, 'PRD01' AS PRDT_TYPE2 , PSM.CATE_IDX, PSM.MAIL_IDX AS PRDT_IDX, CONCAT( DATE_FORMAT(PPM.MAIL_STR_DTM, '%Y-%m-%d' ), ' ~ ', DATE_FORMAT(PPM.MAIL_END_DTM, '%Y-%m-%d' ) ,',', PPM.MAIL_CNT ) AS PRDT_TIME, PPM.MAIL_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, MAIL_PRIC_REAL AS PRDT_PRIC_REAL, MAIL_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_MAIL PSM, PPM_PRDT_MAIL PPM WHERE SALE_USE_YN = 'Y' AND PSM.MAIL_IDX = PPM.MAIL_IDX AND PPM.MAIL_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'PRD05' AS PRDT_TYPE, '' AS PRDT_TYPE2 , PSLI.CATE_IDX, PSLI.LIVE_IDX AS PRDT_IDX, (SELECT CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN)  FROM PPM_PRDT_TIME PPT WHERE PPT.LIVE_IDX = PPLI.LIVE_IDX AND PPT.TIME_USE_YN = 'Y' ORDER BY PPT.TIME_RUN LIMIT 1) AS PRDT_TIME, PPLI.LIVE_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, LIVE_PRIC_REAL AS PRDT_PRIC_REAL, LIVE_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_LIVE PSLI, PPM_PRDT_LIVE PPLI WHERE SALE_USE_YN = 'Y' AND PSLI.LIVE_IDX = PPLI.LIVE_IDX AND PPLI.LIVE_USE_YN = 'Y'
					) PRDT
		WHERE 
			PC.CATE_IDX = PRDT.CATE_IDX 
			AND PRDT_CD = #{prdtCd}
]]>
</select>
	
	
<select id="selectUsePrdtInfo" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT 
	PRDT.*,
	PC.CODE_ID ,
	(SELECT CODE_NM FROM PPM_CODE WHERE PPM_CODE.CODE_ID = PC.CODE_ID) CODE_NM,
	(SELECT CODE_NM FROM PPM_CODE WHERE PPM_CODE.CODE_ID = SUBSTRING( PC.CODE_ID, 1,5 ))  P_CODE_NM
	FROM 
		PPM_CATE PC ,
					(
						SELECT 'PRD03' AS PRDT_TYPE, 'PRD01' AS PRDT_TYPE2 , PSF.CATE_IDX, PSF.FACE_IDX AS PRDT_IDX, (SELECT CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN) FROM PPM_PRDT_TIME PPT WHERE PPT.FACE_IDX = PPF.FACE_IDX AND PPT.TIME_USE_YN = 'Y' ORDER BY PPT.TIME_RUN LIMIT 1) AS PRDT_TIME, PPF.FACE_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, FACE_PRIC_REAL AS PRDT_PRIC_REAL, FACE_PRIC AS PRDT_PRIC 
				  	    FROM PPM_SALE_FACE PSF, PPM_PRDT_FACE PPF WHERE SALE_USE_YN = 'Y' AND PSF.FACE_IDX = PPF.FACE_IDX AND PPF.FACE_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'PRD06' AS PRDT_TYPE, '' AS PRDT_TYPE2 , PSLE.CATE_IDX, PSLE.LECT_IDX AS PRDT_IDX, PPLE.LECT_DTM AS PRDT_TIME, PPLE.LECT_CD AS PRDT_CD,(SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLE.LECT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLE.LECT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, LECT_PRIC_REAL AS PRDT_PRIC_REAL, LECT_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_LECT PSLE, PPM_PRDT_LECT PPLE WHERE SALE_USE_YN = 'Y' AND PPLE.LECT_USE_YN = 'Y' AND PSLE.LECT_IDX = PPLE.LECT_IDX AND PPLE.LECT_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'PRD02' AS PRDT_TYPE, 'PRD01' AS PRDT_TYPE2 , PSC.CATE_IDX, PSC.CHAT_IDX AS PRDT_IDX, (SELECT CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN) FROM PPM_PRDT_TIME PPT WHERE PPT.CHAT_IDX = PPC.CHAT_IDX AND PPT.TIME_USE_YN = 'Y' ORDER BY PPT.TIME_RUN LIMIT 1) AS PRDT_TIME, PPC.CHAT_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2,  CHAT_PRIC_REAL AS PRDT_PRIC_REAL, CHAT_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_CHAT PSC, PPM_PRDT_CHAT PPC WHERE SALE_USE_YN = 'Y' AND PSC.CHAT_IDX = PPC.CHAT_IDX AND PPC.CHAT_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'PRD04' AS PRDT_TYPE, 'PRD01' AS PRDT_TYPE2 , PSM.CATE_IDX, PSM.MAIL_IDX AS PRDT_IDX, CONCAT( DATE_FORMAT(PPM.MAIL_STR_DTM, '%Y-%m-%d' ), ' ~ ', DATE_FORMAT(PPM.MAIL_END_DTM, '%Y-%m-%d' ) ,',', PPM.MAIL_CNT ) AS PRDT_TIME, PPM.MAIL_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, MAIL_PRIC_REAL AS PRDT_PRIC_REAL, MAIL_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_MAIL PSM, PPM_PRDT_MAIL PPM WHERE SALE_USE_YN = 'Y' AND PSM.MAIL_IDX = PPM.MAIL_IDX AND PPM.MAIL_USE_YN = 'Y'
				      UNION ALL
				        SELECT 'PRD05' AS PRDT_TYPE, '' AS PRDT_TYPE2 , PSLI.CATE_IDX, PSLI.LIVE_IDX AS PRDT_IDX, (SELECT CONCAT( PPT.TIME_DTM , ',', PPT.TIME_STR ,' ~ ', DATE_ADD( DATE_FORMAT( CONCAT(PPT.TIME_DTM, ',', PPT.TIME_STR), '%Y-%m-%d,%H:%i' ) , INTERVAL PPT.TIME_RUN MINUTE ),',',PPT.TIME_RUN)  FROM PPM_PRDT_TIME PPT WHERE PPT.LIVE_IDX = PPLI.LIVE_IDX AND PPT.TIME_USE_YN = 'Y' ORDER BY PPT.TIME_RUN LIMIT 1) AS PRDT_TIME, PPLI.LIVE_CD AS PRDT_CD, (SELECT PIP.INFO_PRDT_TITL1 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM1, (SELECT PIP.INFO_PRDT_TITL2 FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM2, LIVE_PRIC_REAL AS PRDT_PRIC_REAL, LIVE_PRIC AS PRDT_PRIC
				        FROM PPM_SALE_LIVE PSLI, PPM_PRDT_LIVE PPLI WHERE SALE_USE_YN = 'Y' AND PSLI.LIVE_IDX = PPLI.LIVE_IDX AND PPLI.LIVE_USE_YN = 'Y'
					) PRDT
		WHERE 
			PC.CATE_IDX = PRDT.CATE_IDX 
]]>
</select>

<select id="selectUserBuyTimeIdx" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT 
			(SELECT CONCAT( TIME_DTM, ' ', TIME_STR ) FROM PPM_PRDT_TIME PPT WHERE PPT.TIME_IDX = #{timeIdx} ) NO_TIME,	
			(SELECT CONCAT( PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP 
				WHERE PIP.PRDT_CD = ( CASE 
				WHEN PUB.BUY_PRDT_CD LIKE '%CN%' THEN CONCAT( 'COACHING',PUB.CATE_IDX ) 
				WHEN PUB.BUY_PRDT_CD LIKE '%FN%' THEN CONCAT( 'COACHING',PUB.CATE_IDX ) 
				WHEN PUB.BUY_PRDT_CD LIKE '%LN%' THEN PUB.BUY_PRDT_CD
			END ) AND PIP.INFO_ORDE = 0 ) NO_TITL,
			
			(SELECT LIVE_CNT FROM PPM_PRDT_LIVE WHERE LIVE_CD = PUB.BUY_PRDT_CD ) LIVE_CNT

		
		FROM PPM_USER_BUY PUB 
			WHERE PUB.BUY_PRDT_CD = #{prdtCd} AND PUB.TIME_IDX = #{timeIdx}
			AND ( PUB.BUY_STAT = '결제완료' OR ( PUB.BUY_STAT = '입금대기' AND DATEDIFF( NOW(), PUB.SYS_REG_DTM ) < 3 ) )
]]>
</select>	


<select id="selectFrontPeoplemadeSmsList" parameterType="hashmap" resultType="hashmap">
<![CDATA[
		SELECT
			PUB.BUY_IDX,
			PU_M.USER_NM AS M_USER_NM,
			PU_M.USER_PHONE AS M_USER_PHONE,
			PU_U.USER_NM,
			PU_U.USER_PHONE,
			
			PUB.BUY_PRDT_CD,
			(
				CASE
					WHEN PUB.BUY_PRDT_CD LIKE '%VL%' THEN 'VOD'
					WHEN PUB.BUY_PRDT_CD LIKE '%FN%' THEN '1:1화상코칭'
					WHEN PUB.BUY_PRDT_CD LIKE '%CN%' THEN '1:1채팅코칭'
					WHEN PUB.BUY_PRDT_CD LIKE '%LN%' THEN 'LIVE CLASS'
					WHEN PUB.BUY_PRDT_CD LIKE '%EN%' THEN '1:1이메일코칭'
				END
			) AS PRDT_TYPE,
			(
				CASE
					WHEN PUB.BUY_PRDT_CD LIKE '%EN%' THEN DATE_FORMAT( ( SELECT DATE_ADD(DATE_FORMAT( PUB.BUY_COMP_DTM, '%Y-%m-%d' ), INTERVAL MAIL_CNT DAY) FROM PPM_PRDT_MAIL WHERE MAIL_CD = PUB.BUY_PRDT_CD ), '%m월 %d일' )
					ELSE ''
				END
			) AS PRDT_TERM,
			PUB.TIME_IDX,
			PPT.TIME_DTM,
			DATE_FORMAT(PPT.TIME_DTM, '%Y년 %m월 %d일') TIME_DTM_NM,
			PPT.TIME_STR
		FROM 
			PPM_USER_BUY PUB
				LEFT OUTER JOIN PPM_PRDT_TIME PPT ON PUB.TIME_IDX = PPT.TIME_IDX
				LEFT JOIN PPM_CATE PC ON PUB.CATE_IDX = PC.CATE_IDX	
				LEFT JOIN PPM_USER PU_M ON PC.USER_IDX = PU_M.USER_IDX				
				LEFT JOIN PPM_USER PU_U ON PUB.USER_IDX = PU_U.USER_IDX					
		WHERE 
		]]>
	<if test='buyNo not in {null, ""}'>
	<![CDATA[
			BUY_NO = #{buyNo} 
	]]>
	</if>
	<if test='buyNo in {null, ""}'>
	<![CDATA[
			PUB.BUY_IDX = #{buyIdx} 
	]]>
	</if>
</select>
	

<insert id="updatePrdtQuesDataData" parameterType="hashmap">
	<selectKey order="BEFORE" resultType="java.lang.Integer" keyProperty="BUY_IDX">	
		<![CDATA[
			SELECT 
				PUB.BUY_IDX AS BUY_IDX
				FROM 
					PPM_SALE_CD_VIEW PSCV,
					PPM_USER_BUY PUB 
					WHERE 
						PUB.BUY_PRDT_CD = PSCV.PRDT_CD
						AND PUB.BUY_NO = #{buyNo}
						AND PSCV.PRDT_CD = #{prdtCd}
		]]>
	</selectKey>
		<![CDATA[
				UPDATE PPM_PRDT_QUES_DATA  
					SET BUY_IDX = #{BUY_IDX}
							WHERE 
								BUY_IDX IS NULL 
								AND USER_IDX = #{frontLoginIdx}
								AND QUES_IDX IN (${quesQuesIdxs})
				
		]]>
</insert>
	
</mapper>
