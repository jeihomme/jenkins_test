<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="frontContestTeam">

	<!-- 공모전 팀  목록 조회 -->
	<select id="selectContestTeamList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				*
			FROM (
				SELECT
					CAST(@rownum:=@rownum+1 AS UNSIGNED) as NO,
					T_IDX,
					COMP_IDX,
					T_NM,
					T_LOC,
					DATEDIFF( NOW(), DATE( T_DEADLINE ) ) AS T_DDAY,
					T_RECRUIT,
					T_TITLE,
					( SELECT COMP_CATEGORY FROM NSTR_SITE_COMP AS A WHERE A.COMP_IDX = AA.COMP_IDX ) AS COMP_CATEGORY,
					SYS_REG_ID,
					CAST( SYS_REG_DTM AS CHAR ) AS SYS_REG_DTM,
					SYS_MOD_ID,
					SYS_MOD_DTM
				FROM
				    NSTR_SITE_COMP_TEAM AA
				WHERE
					(@rownum:=0)=0
		]]>
		<if test="tLoc not in {null, ''}">
			<![CDATA[
				AND T_LOC LIKE '%${tLoc}%'
			]]>
		</if>
		<![CDATA[
				ORDER BY DATEDIFF( NOW(), DATE( T_DEADLINE ) ) ASC
				) A
		]]>	
		<if test="compCategory not in {null, ''}">
			<![CDATA[
				WHERE COMP_CATEGORY LIKE '%${compCategory}%'
			]]>
		</if>
		<![CDATA[
			ORDER BY A.NO DESC
		]]>
		<if test="cnt not in {null, ''}">
			<![CDATA[
				LIMIT ${cnt}
			]]>
		</if>
	</select>
	
	<!-- 공모전 팀  유저 목록 조회 -->
	<select id="selectContestTeamUserList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				*
			FROM (
				SELECT
					CAST(@rownum:=@rownum+1 AS UNSIGNED) as NO,
					USER_IDX,
					USER_NAME,
					USER_JOB,
					USER_NICK,
					USER_TEL,
					USER_EMAIL,
					CAST( SYS_REG_DTM AS CHAR ) AS SYS_REG_DTM,
					LONG_NOT_CONT_YN,
					USER_STAT
				FROM
				    NSTR_MNG_USER_LIST
				WHERE
					(@rownum:=0)=0
				AND USER_STAT = 'U'
				AND TEAM_INVITATION = 'N'
		]]>
		<if test="userNick not in {null, ''}">
			<![CDATA[
				AND USER_NICK LIKE '%${userNick}%'
			]]>
		</if>
		
		<![CDATA[
		) A
			ORDER BY A.NO DESC
		]]>
	</select>
	
	
	<!-- 공모전 팀  상세 조회 -->
	<select id="selectContestTeamDetail" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
				SELECT
					USER_IDX,
					USER_NAME,
					USER_JOB,
					USER_NICK,
					USER_PW,
					USER_TEL,
					USER_EMAIL,
					SYS_REG_DTM,
					LONG_NOT_CONT_YN,
					USER_STAT,
					USER_STAT_DETAIL,
					USER_STR_DATE,
					USER_END_DATE,
					ROUND( (EVAL_ACT_SINC +EVAL_TIME_APP +EVAL_PROFESSIONAL +	EVAL_CONSIDERATION +EVAL_CREATIVITY)/5 , 0) AS EVAL_AVG,
					EVAL_ACT_SINC,
					EVAL_TIME_APP,
					EVAL_PROFESSIONAL,
					EVAL_CONSIDERATION,
					EVAL_CREATIVITY
				FROM (
					SELECT
						USER.USER_IDX,
						USER.USER_NAME,
						USER.USER_JOB,
						USER.USER_NICK,
						USER.USER_PW,
						USER.USER_TEL,
						USER.USER_EMAIL,
						CAST( USER.USER_STR_DATE AS CHAR(10) ) AS USER_STR_DATE,
						CAST( USER.USER_END_DATE AS CHAR(10) ) AS USER_END_DATE,
						CAST( USER.SYS_REG_DTM AS CHAR ) AS SYS_REG_DTM,
						USER.LONG_NOT_CONT_YN,
						USER.USER_STAT,
						USER.USER_STAT_DETAIL,
						'-' AS EVAL_AVG,
						EVAL.EVAL_ACT_SINC,
						EVAL.EVAL_TIME_APP,
						EVAL.EVAL_PROFESSIONAL,
						EVAL.EVAL_CONSIDERATION,
						EVAL.EVAL_CREATIVITY
					FROM
					    NSTR_MNG_USER_LIST AS USER,
					    (	SELECT
					    		USER_EMAIL,
								(CASE WHEN CNT > 0 THEN ROUND(EVAL_ACT_SINC/CNT,0) ELSE EVAL_ACT_SINC END) AS EVAL_ACT_SINC,
								(CASE WHEN CNT > 0 THEN ROUND(EVAL_TIME_APP/CNT,0) ELSE EVAL_TIME_APP END) AS EVAL_TIME_APP,
								(CASE WHEN CNT > 0 THEN ROUND(EVAL_PROFESSIONAL/CNT,0) ELSE EVAL_PROFESSIONAL END) AS EVAL_PROFESSIONAL,
								(CASE WHEN CNT > 0 THEN ROUND(EVAL_CONSIDERATION/CNT,0) ELSE EVAL_CONSIDERATION END) AS EVAL_CONSIDERATION,
								(CASE WHEN CNT > 0 THEN ROUND(EVAL_CREATIVITY/CNT,0) ELSE EVAL_CREATIVITY END) AS EVAL_CREATIVITY
							FROM(
								SELECT
									COUNT( * ) - 1 AS CNT,
									USER_EMAIL,
									SUM(EVAL_ACT_SINC) AS EVAL_ACT_SINC,
									SUM(EVAL_TIME_APP) AS EVAL_TIME_APP,
									SUM(EVAL_PROFESSIONAL) AS EVAL_PROFESSIONAL,
									SUM(EVAL_CONSIDERATION) AS EVAL_CONSIDERATION,
									SUM(EVAL_CREATIVITY) AS EVAL_CREATIVITY
								FROM
									NSTR_SITE_USER_EVAL
								WHERE
									USER_EMAIL = '${userEmail }'
								GROUP BY USER_EMAIL
							) A
						) AS EVAL
					WHERE 1=1
						AND USER.USER_IDX = '${userIdx }'
						AND USER.USER_EMAIL = EVAL.USER_EMAIL
				) A
		]]>
	</select>

	<!-- 공모전 팀  ID 중복 조회 -->
	<select id="selectContestTeamCheckYn" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
			   USER_IDX
			FROM
			    NSTR_MNG_USER_LIST
			WHERE
			    USER_ID = '${USERWrtId}'
			ORDER BY 
				USER_IDX DESC
			LIMIT 1
		]]>
	</select>
	
	<!-- 공모전 팀  ID 중복 조회 -->
	<select id="selectContestTeamMaxIdx" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				MAX(T_IDX) AS T_IDX
			FROM
				NSTR_SITE_COMP_TEAM
		]]>
	</select>

	<!-- 공모전 팀  등록 -->
	<insert id="insertContestTeamData" parameterType="hashmap">
		<selectKey keyProperty="SEQ" resultType="int" order="AFTER">
			<![CDATA[
			SELECT LAST_INSERT_ID() AS SEQ
			]]>
		</selectKey>
		<![CDATA[
			INSERT INTO NSTR_SITE_COMP_TEAM (
				COMP_IDX,
				T_NM,
				T_LOC,
				T_DEADLINE,
				T_RECRUIT,
				T_TITLE,
				
				SYS_REG_ID,
				SYS_REG_DTM,
				SYS_MOD_ID,
				SYS_MOD_DTM
			) VALUES (
				'${compIdx}',
				'${tNm}',
				'${tLoc}',
				DATE_ADD(NOW(), INTERVAL +1 MONTH ),
				'',
				'${tTitle}',
				
				'${userId}',
				DATE_FORMAT(NOW(), '%Y%m%d%H%i%S'),
				'${userId}',
				DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
			)
		]]>
	</insert>

	<!-- 공모전 팀  팀 초대 등록 -->
	<insert id="insertContestTeamMemberData" parameterType="hashmap">
		<![CDATA[
			INSERT INTO NSTR_SITE_COMP_TEAM_MEMBER (
				T_IDX,
				T_MEM_EMAIL,
				T_MEM_TALENT,
				T_MEM_ATTI,
				T_MEM_ACPT,
				T_MEM_INVITE,
				
				SYS_REG_ID,
				SYS_REG_DTM,
				SYS_MOD_ID,
				SYS_MOD_DTM
			) VALUES (
				'${tIdx}',
				'${userEmail}',
				'팀장이 초대했습니다.',
				'팀장이 초대했습니다.',
				'${tMemAcpt}',
				'Y',
				
				'${userId}',
				DATE_FORMAT(NOW(), '%Y%m%d%H%i%S'),
				'${userId}',
				DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
			)
		]]>
	</insert>
	
	<!-- 공모전 팀  수정 -->
	<update id="updateContestTeamData" parameterType="hashmap">
		<![CDATA[
			UPDATE NSTR_MNG_USER_LIST SET
			
				USER_STAT = '${userStat}',
				USER_STAT_DETAIL = '${userStatDetail}',
				USER_STR_DATE = '${userStrDate}',
				USER_END_DATE = '${userEndDate}',
				SYS_MOD_ID = '${userId}',
				SYS_MOD_DTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
			WHERE
				USER_IDX = '${userIdx}'
		]]>
	</update>
	
	<!-- 공모전 팀  삭제 -->
	<update id="deleteContestTeamData" parameterType="hashmap">
		<![CDATA[
			DELETE FROM NSTR_MNG_USER_LIST
			WHERE
				USER_IDX = '${userIdx}'
		]]>
	</update>
	
		<!-- 사용자 닉네임 중복 조회 -->
	<select id="selectEditPassCk" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
				SELECT
				   USER_PW
				FROM
				    NSTR_MNG_USER_LIST
				WHERE
				    USER_EMAIL = '${loginEmail}'
				ORDER BY 
					USER_IDX DESC
				LIMIT 1
		]]>
	</select>

</mapper>
