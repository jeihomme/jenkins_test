<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="mngMember">

	<!-- 로그인 체크 -->
	<select id="selectMngMemberList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
				]]>
			<if test="status not in {'LIST'}">
				<![CDATA[
SELECT C.*, REPLACE(CONVERT(C.NUM_DESC, CHAR),'.0','') AS NUM_DESC_ORDER FROM (
  SELECT B.*, (@rownumB:=@rownumB+1) as NUM_ASC FROM(  
    SELECT A.*, (@rownumA:=@rownumA+1) as NUM_DESC FROM (
				]]>
			</if>
		<![CDATA[
			    SELECT
					USER_IDX,
				  	USER_EMAIL,
				  	
				  	REPLACE( IF(LENGTH(USER_PHONE) < 11,

					CONCAT(LEFT(USER_PHONE,3),'-',MID(USER_PHONE,4,3),'-',MID(USER_PHONE,7)), 
					CONCAT(LEFT(USER_PHONE,3),'-',MID(USER_PHONE,4,4),'-',MID(USER_PHONE,8))
					
					),'--','-')  	USER_PHONE,
				  	USER_NM,
				  	
				  	USER_SNS_TYPE,
				  	CASE USER_SNS_TYPE
				  		WHEN 'K' THEN '카카오'
				  		WHEN 'G' THEN '구글'
				  		WHEN 'N' THEN '네이버'
				  		ELSE '사이트' END USER_SNS_TYPE_NM,
				  		
				  	PREV_IDX,
				  	(
				  		CASE USER_GENDER
				  			WHEN 'M' THEN '남성'
				  			ELSE '여성'
				  		END
				  	) AS USER_GENDER,
				  	DATE_FORMAT( USER_BIRTH, '%Y-%m-%d') AS USER_BIRTH,
				  	( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = USER_ZONE ) AS USER_ZONE,
				  	
				  	USER_MAIL_YN,
				  	USER_PUSH_YN,
				  	USER_SMS_YN,
				  	USER_REST_YN,
				  	USER_USE_YN,
				  	CASE USER_USE_YN 
				  			WHEN 'Y' THEN 
										CASE USER_REST_YN WHEN 'Y' THEN '휴면'
										WHEN 'N' THEN '활동' END
					  		WHEN 'N' THEN '탈퇴' END USER_STATE, 
				  	
				  	
				  	USER_DEL_YN,
				  	DATE_FORMAT(USER_LOGIN_DTM, '%Y-%m-%d %H:%i:%S') USER_LOGIN_DTM,
				  	DATE_FORMAT(USER_CONS_DTM, '%Y-%m-%d %H:%i:%S') USER_CONS_DTM,
				  	DATE_FORMAT(USER_MAST_JOIN_DTM, '%Y-%m-%d %H:%i:%S') USER_MAST_JOIN_DTM,
				  	USER_INFO,
				  	
				  	USER_LINK,
				  	USER_KEYW,
				  	USER_TYPE,
				  	CASE USER_TYPE
				  					WHEN 'S' THEN '스태프'
								  	WHEN 'M' THEN '마스터'
								  	WHEN 'U' THEN '회원'
				 	END USER_TYPE_NM,
				  	
				  	SYS_REG_IDX,
				  	DATE_FORMAT( SYS_REG_DTM, '%Y-%m-%d') SYS_REG_DTM,
				  	SYS_MOD_IDX,
				  	SYS_MOD_DTM
				FROM
				    PPM_USER
				 WHERE
				 	USER_IDX IS NOT NULL
				]]>
			<if test="userNm not in {null, ''}">
				<![CDATA[
					AND ( USER_NM LIKE '%${userNm}%' or USER_EMAIL LIKE '%${userNm}%' )
				]]>
			</if>
			<if test="sysRegDtmStr not in {null, ''} and sysRegDtmEnd not in {null, ''}">
				<![CDATA[
					AND DATE_FORMAT( SYS_REG_DTM, '%Y-%m-%d' ) BETWEEN '${sysRegDtmStr}' AND '${sysRegDtmEnd}' 
				]]>
			</if>
							
			<if test="status not in {'LIST'}">
				<![CDATA[
						) A JOIN (SELECT @rownumA:=0) rownumA
  ) B JOIN (SELECT @rownumB:=0) rownumB ORDER BY USER_IDX DESC
) C WHERE NUM_ASC BETWEEN '${startRow }' AND '${endRow }'
				]]>
			</if>
		<![CDATA[
		]]>
	</select>
	
	<!-- 로그인 체크 -->
	<select id="selectMngMemberListCnt" parameterType="hashmap" resultType="java.lang.Integer">
		<![CDATA[
			    SELECT
					COUNT(0) AS CNT
				FROM
				    PPM_USER
				 WHERE
				 	USER_IDX IS NOT NULL
				]]>
								<![CDATA[
				]]>
							<if test="userNm not in {null, ''}">
				<![CDATA[
					AND ( USER_NM LIKE '%${userNm}%' or USER_EMAIL LIKE '%${userNm}%' )
				]]>
			</if>
			<if test="sysRegDtmStr not in {null, ''} and sysRegDtmEnd not in {null, ''}">
				<![CDATA[
					AND DATE_FORMAT( SYS_REG_DTM, '%Y-%m-%d' ) BETWEEN '${sysRegDtmStr}' AND '${sysRegDtmEnd}' 
				]]>
			</if>
						<![CDATA[
		]]>
	</select>

	<!-- 로그인 체크 -->
	<select id="selectMngMemberList_Excel" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
				]]>
			<if test="status not in {'LIST'}">
				<![CDATA[
SELECT
	CONVERT( NUM_DESC, UNSIGNED ) AS 'ㄱ_No',
	USER_NM AS 'ㄲ_회원',
	USER_EMAIL AS 'ㄴ_계정',
	USER_PHONE AS 'ㄷ_전화번호',
	SYS_REG_DTM AS 'ㄹ_가입일',
	USER_SNS_TYPE_NM AS 'ㅁ_가입수단',
	USER_TYPE_NM AS 'ㅂ_회원',
	USER_BIRTH AS 'ㅅ_생일',
	USER_ZONE AS 'ㅇ_지역',
	USER_MAIL_YN AS 'ㅈ_메일수신',
	USER_SMS_YN AS 'ㅊ_문자수신',
--	USER_REST_YN AS 'ㅋ_상태'
	USER_STATE AS 'ㅋ_상태'
	
					FROM (
  SELECT B.*, (@rownumB:=@rownumB+1) as NUM_ASC FROM(  
    SELECT A.*, (@rownumA:=@rownumA+1) as NUM_DESC FROM (
				]]>
			</if>
		<![CDATA[
			    SELECT
					USER_IDX,
				  	USER_EMAIL,
				  	
				  	REPLACE( IF(LENGTH(USER_PHONE) < 11,

					CONCAT(LEFT(USER_PHONE,3),'-',MID(USER_PHONE,4,3),'-',MID(USER_PHONE,7)), 
					CONCAT(LEFT(USER_PHONE,3),'-',MID(USER_PHONE,4,4),'-',MID(USER_PHONE,8))
					
					),'--','-')  	USER_PHONE,
				  	USER_NM,
				  	
				  	USER_SNS_TYPE,
				  	CASE USER_SNS_TYPE
				  		WHEN 'K' THEN '카카오'
				  		WHEN 'G' THEN '구글'
				  		WHEN 'N' THEN '네이버'
				  		ELSE '사이트' END USER_SNS_TYPE_NM,
				  		
				  	PREV_IDX,
				  	(
				  		CASE USER_GENDER
				  			WHEN 'M' THEN '남성'
				  			ELSE '여성'
				  		END
				  	) AS USER_GENDER,
				  	DATE_FORMAT( USER_BIRTH, '%Y-%m-%d') AS USER_BIRTH,
				  	( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = USER_ZONE ) AS USER_ZONE,
				  	
				  	USER_MAIL_YN,
				  	USER_PUSH_YN,
				  	USER_SMS_YN,
				  	USER_REST_YN,
				  	USER_USE_YN,
				  	CASE USER_USE_YN 
				  			WHEN 'Y' THEN 
										CASE USER_REST_YN WHEN 'Y' THEN '휴면'
										WHEN 'N' THEN '활동' END
					  		WHEN 'N' THEN '탈퇴' END USER_STATE, 
				  	
				  	
				  	USER_DEL_YN,
				  	DATE_FORMAT(USER_LOGIN_DTM, '%Y-%m-%d %H:%i:%S') USER_LOGIN_DTM,
				  	DATE_FORMAT(USER_CONS_DTM, '%Y-%m-%d %H:%i:%S') USER_CONS_DTM,
				  	DATE_FORMAT(USER_MAST_JOIN_DTM, '%Y-%m-%d %H:%i:%S') USER_MAST_JOIN_DTM,
				  	USER_INFO,
				  	
				  	USER_LINK,
				  	USER_KEYW,
				  	USER_TYPE,
				  	CASE USER_TYPE
				  					WHEN 'S' THEN '스태프'
								  	WHEN 'M' THEN '마스터'
								  	WHEN 'U' THEN '회원'
				 	END USER_TYPE_NM,
				  	
				  	SYS_REG_IDX,
				  	DATE_FORMAT( SYS_REG_DTM, '%Y-%m-%d') SYS_REG_DTM,
				  	SYS_MOD_IDX,
				  	SYS_MOD_DTM
				FROM
				    PPM_USER
				 WHERE
				 	USER_IDX IS NOT NULL
				]]>
			<if test="userNm not in {null, ''}">
				<![CDATA[
					AND ( USER_NM LIKE '%${userNm}%' or USER_EMAIL LIKE '%${userNm}%' )
				]]>
			</if>
			<if test="sysRegDtmStr not in {null, ''} and sysRegDtmEnd not in {null, ''}">
				<![CDATA[
					AND DATE_FORMAT( SYS_REG_DTM, '%Y-%m-%d' ) BETWEEN '${sysRegDtmStr}' AND '${sysRegDtmEnd}' 
				]]>
			</if>
				<![CDATA[
			) A JOIN (SELECT @rownumA:=0) rownumA
		  ) B JOIN (SELECT @rownumB:=0) rownumB ORDER BY USER_IDX DESC
		) C 
		]]>
	</select>
	
	<select id="selectMngMemberDetail" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			    
		  SELECT
					USER_IDX,
				  	USER_EMAIL,
				  	USER_NICK,
				  	USER_PHONE,
				  	USER_NM,
				  	
				  	USER_SNS_TYPE,
				  	CASE USER_SNS_TYPE
				  		WHEN 'K' THEN '카카오'
				  		WHEN 'G' THEN '구글'
				  		WHEN 'N' THEN '네이버'
				  		ELSE '사이트' END USER_SNS_TYPE_NM,
				  		
				  	PREV_IDX,
				  	(
				  		CASE USER_GENDER
				  			WHEN 'M' THEN '남성'
				  			ELSE '여성'
				  		END
				  	) AS USER_GENDER,
				  	DATE_FORMAT( USER_BIRTH, '%Y-%m-%d') USER_BIRTH,
				  	( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = USER_ZONE ) AS USER_ZONE,
				  	
				  	USER_MAIL_YN,
				  	USER_PUSH_YN,
				  	USER_SMS_YN,
				  	USER_REST_YN,
				  	USER_USE_YN,
				  	CASE USER_USE_YN 
				  			WHEN 'Y' THEN 
										CASE USER_REST_YN WHEN 'Y' THEN '휴면'
										WHEN 'N' THEN '활동' END
					  		WHEN 'N' THEN '탈퇴' END USER_STATE, 
				  	
				  	
				  	
				  	USER_DEL_YN,
				  	DATE_FORMAT(USER_LOGIN_DTM, '%Y-%m-%d %H:%i:%S') USER_LOGIN_DTM,
				  	DATE_FORMAT(USER_CONS_DTM, '%Y-%m-%d %H:%i:%S') USER_CONS_DTM,
				  	DATE_FORMAT(USER_MAST_JOIN_DTM, '%Y-%m-%d %H:%i:%S') USER_MAST_JOIN_DTM,
				  	USER_INFO,
				  	
				  	USER_LINK,
				  	USER_KEYW,
				  	USER_TYPE,
				  	CASE USER_TYPE
				  					WHEN 'S' THEN '스태프'
								  	WHEN 'M' THEN '마스터'
								  	WHEN 'U' THEN '일반'
				  					 END USER_TYPE_NM,
				  	
				  	SYS_REG_IDX,
				  	DATE_FORMAT( SYS_REG_DTM, '%Y-%m-%d') SYS_REG_DTM,
				  	SYS_MOD_IDX,
				  	SYS_MOD_DTM
				FROM
				    PPM_USER
			    WHERE
  			 		USER_IDX = #{userIdx}
		]]>
	</select>

	<update id="updateMngMemberData" parameterType="hashmap" >
		<![CDATA[
			    
		    UPDATE
		    	PPM_USER 
    		SET
				USER_PW = #{userPw}
	    	WHERE 
	    		USER_IDX = #{userIdx}
		]]>
	</update>
	
	
	<update id="deleteMngMemberData" parameterType="hashmap" >
		<![CDATA[
			    
		    UPDATE
		    	PPM_USER 
    		SET
				USER_USE_YN = 'N'
	    	WHERE 
	    		USER_IDX = #{userIdx}
		]]>
	</update>
	
	

	<!-- 로그인 체크 -->
	<select id="selectMngMemberNetworkList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
SELECT C.*, REPLACE(CONVERT(C.NUM_DESC, CHAR),'.0','') AS NUM_DESC_ORDER FROM (
  SELECT B.*, (@rownumB:=@rownumB+1) as NUM_ASC FROM(  
    SELECT A.*, (@rownumA:=@rownumA+1) as NUM_DESC FROM (
    
    
			    SELECT 
			    	PU.USER_IDX,
			    	PC.CATE_IDX,
					( SELECT USER_NM FROM PPM_USER WHERE USER_IDX = PC.USER_IDX ) AS MASTER_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PC.CODE_ID,1,5) ) AS CODE_PARENT_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PC.CODE_ID ) AS CODE_NM,
				  	DATE_FORMAT( ( SELECT MIN(SYS_REG_DTM) FROM PPM_USER_BUY WHERE BUY_REFU_YN = 'N' AND USER_IDX = PUB.USER_IDX ), '%Y-%m-%d') AS USER_MAST_JOIN_DTM,
				  	DATE_FORMAT( ( SELECT MAX(SYS_REG_DTM) FROM PPM_USER_BUY WHERE BUY_REFU_YN = 'N' AND USER_IDX = PUB.USER_IDX ), '%Y-%m-%d') AS USER_CONS_DTM,
					(
						SELECT
							COUNT(0)
						FROM
							PPM_USER_BUY_PROG PUBP
							
							WHERE 
								PUB.BUY_IDX = PUBP.BUY_IDX
					) AS PRDT_LECT_CNT,
					
					(
					SELECT
						( SELECT COUNT(0) FROM PPM_PRDT_CHAT WHERE CATE_IDX = PC.CATE_IDX AND CHAT_CD = PUB.BUY_PRDT_CD ) +
						( SELECT COUNT(0) FROM PPM_PRDT_FACE WHERE CATE_IDX = PC.CATE_IDX AND FACE_CD = PUB.BUY_PRDT_CD ) +
						( SELECT COUNT(0) FROM PPM_PRDT_LIVE WHERE CATE_IDX = PC.CATE_IDX AND LIVE_CD = PUB.BUY_PRDT_CD ) +
						( SELECT COUNT(0) FROM PPM_PRDT_MAIL WHERE CATE_IDX = PC.CATE_IDX AND MAIL_CD = PUB.BUY_PRDT_CD )
					) AS PRDT_CONS_CNT2,
					(
					SELECT 	
						COUNT(*)
							FROM 
								(SELECT *
									FROM 
										PPM_USER_BUY_CONS PUBC
										
										GROUP BY BUY_IDX
										) A
										WHERE 
											A.BUY_IDX = PUB.BUY_IDX 
					) AS PRDT_CONS_CNT
				FROM
					PPM_USER_BUY PUB,
					PPM_CATE PC,
					PPM_USER PU
				WHERE
					PUB.CATE_IDX = PC.CATE_IDX
					AND PC.USER_IDX = PU.USER_IDX
					AND PUB.USER_IDX = #{userIdx}
					AND PUB.BUY_COMP_YN = 'Y'
				 	AND PUB.BUY_REFU_YN = 'N'
				 	AND PUB.BUY_STAT = '결제완료'
				 	
				 	GROUP BY PC.CATE_IDX 
				 	
	) A JOIN (SELECT @rownumA:=0) rownumA
  ) B JOIN (SELECT @rownumB:=0) rownumB ORDER BY NUM_DESC DESC
) C WHERE NUM_DESC BETWEEN '${startRow }' AND '${endRow }'
				]]>
	</select>
	
	<!-- 로그인 체크 -->
	<select id="selectMngMemberNetworkListCnt" parameterType="hashmap" resultType="java.lang.Integer">
		<![CDATA[
SELECT
    	COUNT(0)
   FROM (
		SELECT 
		 	PU.USER_IDX,
					( SELECT USER_NM FROM PPM_USER WHERE USER_IDX = PC.USER_IDX ) AS MASTER_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PC.CODE_ID,1,5) ) AS CODE_PARENT_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PC.CODE_ID ) AS CODE_NM,
				  	DATE_FORMAT( ( SELECT MIN(SYS_REG_DTM) FROM PPM_USER_BUY WHERE BUY_REFU_YN = 'N' AND USER_IDX = PUB.USER_IDX ), '%Y-%m-%d') AS USER_MAST_JOIN_DTM,
				  	DATE_FORMAT( ( SELECT MAX(SYS_REG_DTM) FROM PPM_USER_BUY WHERE BUY_REFU_YN = 'N' AND USER_IDX = PUB.USER_IDX ), '%Y-%m-%d') AS USER_CONS_DTM,
					(
						SELECT
							COUNT(0)
						FROM
							PPM_USER_BUY_PROG PUBP
							
							WHERE 
								PUB.BUY_IDX = PUBP.BUY_IDX
					) AS PRDT_LECT_CNT,
					
					(
					SELECT
						( SELECT COUNT(0) FROM PPM_PRDT_CHAT WHERE CATE_IDX = PC.CATE_IDX AND CHAT_CD = PUB.BUY_PRDT_CD ) +
						( SELECT COUNT(0) FROM PPM_PRDT_FACE WHERE CATE_IDX = PC.CATE_IDX AND FACE_CD = PUB.BUY_PRDT_CD ) +
						( SELECT COUNT(0) FROM PPM_PRDT_LIVE WHERE CATE_IDX = PC.CATE_IDX AND LIVE_CD = PUB.BUY_PRDT_CD ) +
						( SELECT COUNT(0) FROM PPM_PRDT_MAIL WHERE CATE_IDX = PC.CATE_IDX AND MAIL_CD = PUB.BUY_PRDT_CD )
					) AS PRDT_CONS_CNT2,
					(
					SELECT 	
						COUNT(*)
							FROM 
								(SELECT *
									FROM 
										PPM_USER_BUY_CONS PUBC
										
										GROUP BY BUY_IDX
										) A
										WHERE 
											A.BUY_IDX = PUB.BUY_IDX 
					) AS PRDT_CONS_CNT
		FROM
			PPM_USER_BUY PUB,
			PPM_CATE PC,
			PPM_USER PU
		WHERE
			PUB.CATE_IDX = PC.CATE_IDX
			AND PC.USER_IDX = PU.USER_IDX
			AND PUB.USER_IDX = #{userIdx}
			AND PUB.BUY_COMP_YN = 'Y'
			AND PUB.BUY_REFU_YN = 'N'
			AND PUB.BUY_STAT = '결제완료'
				 	
				 	GROUP BY PC.CATE_IDX 
		) SUB
					
		]]>
	</select>
	
	

	<!-- 로그인 체크 -->
	<select id="selectMngMemberNetworkFollList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
SELECT C.*, REPLACE(CONVERT(C.NUM_DESC, CHAR),'.0','') AS NUM_DESC_ORDER FROM (
  SELECT B.*, (@rownumB:=@rownumB+1) as NUM_ASC FROM(  
    SELECT A.*, (@rownumA:=@rownumA+1) as NUM_DESC FROM (
    
				SELECT DISTINCT
					PUF.FOLL_IDX,
					PU.USER_IDX,
					PU.USER_NM,
					P_CODE.CODE_NM AS P_CODE_NM,
					M_CODE.CODE_NM AS M_CODE_NM,
					PU.USER_EMAIL,
					DATE_FORMAT( PUF.SYS_REG_DTM, '%Y-%m-%d %H:%i:%S') AS SYS_REG_DTM
				FROM
					PPM_USER_FOLL PUF
						LEFT JOIN PPM_CATE PC ON PUF.CATE_IDX = PC.CATE_IDX
						LEFT JOIN PPM_CODE P_CODE ON SUBSTR(PC.CODE_ID,1,5) = P_CODE.CODE_ID
						LEFT JOIN PPM_CODE M_CODE ON PC.CODE_ID = M_CODE.CODE_ID
						LEFT JOIN PPM_USER PU ON PUF.USER_IDX = PU.USER_IDX
				WHERE
					USER_NM IS NOT NULL
					AND PUF.FOLL_USE_YN = 'Y'
					AND PC.CATE_USE_YN = 'Y'
					AND PU.USER_USE_YN = 'Y'
					AND PUF.CATE_IDX = #{cateIdx}
				 	
	) A JOIN (SELECT @rownumA:=0) rownumA
  ) B JOIN (SELECT @rownumB:=0) rownumB ORDER BY FOLL_IDX DESC
) C WHERE NUM_DESC BETWEEN '${startRow }' AND '${endRow }'
				]]>
	</select>
	
	<!-- 로그인 체크 -->
	<select id="selectMngMemberNetworkFollListCnt" parameterType="hashmap" resultType="java.lang.Integer">
		<![CDATA[
	
	SELECT
		COUNT(DISTINCT FOLL_IDX)
	FROM
		PPM_USER_FOLL PUF
			LEFT JOIN PPM_CATE PC ON PUF.CATE_IDX = PC.CATE_IDX
			LEFT JOIN PPM_CODE P_CODE ON SUBSTR(PC.CODE_ID,1,5) = P_CODE.CODE_ID
			LEFT JOIN PPM_CODE M_CODE ON PC.CODE_ID = M_CODE.CODE_ID
			LEFT JOIN PPM_USER PU ON PUF.USER_IDX = PU.USER_IDX
	WHERE
		USER_NM IS NOT NULL
		AND PUF.FOLL_USE_YN = 'Y'
		AND PC.CATE_USE_YN = 'Y'
		AND PU.USER_USE_YN = 'Y'
		AND PUF.CATE_IDX = #{cateIdx}
					
		]]>
	</select>
	
	<select id="selectMngMemberLectList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
SELECT C.*, REPLACE(CONVERT(C.NUM_DESC, CHAR),'.0','') AS NUM_DESC_ORDER FROM (
  SELECT B.*, (@rownumB:=@rownumB+1) as NUM_ASC FROM(  
    SELECT A.*, (@rownumA:=@rownumA+1) as NUM_DESC FROM (
    
    		SELECT
				USER_IDX,
				PRDT_TYPE,
				( SELECT USER_NM FROM PPM_USER WHERE USER_IDX = MAIN.M_USER_IDX ) AS MASTER_NM,
				PRDT_CD,
				PRDT_NM,
				BUY_NO,
				BUY_IDX,
				
				CODE_PARENT_NM,
				CODE_NM,
	
				PRDT_STR,
				PRDT_END,
				DATEDIFF(PRDT_END,PRDT_STR)+1+ IFNULL( (SELECT SUM(EXTE_DATE) FROM PPM_USER_BUY_EXTE PUBE WHERE PUBE.BUY_IDX = MAIN.BUY_IDX ) , 0) AS PRDT_TOTAL_DTM,
				
				CONVERT(PRDT_TOTAL_CNT, CHAR) AS PRDT_TOTAL_CNT,
				CONVERT(PRDT_PROG_CNT, CHAR) AS PRDT_PROG_CNT,
				
				IFNULL(ROUND( PRDT_PROG_CNT/PRDT_TOTAL_CNT*100, 1 ),'') AS PRDT_PROG_AVG,
				VOD_CANCLE_END_YN,
				VOD_CANCLE_END_DTM
			FROM (
				SELECT 
					PUB.USER_IDX,
					PU_M.USER_IDX AS M_USER_IDX,
					'VOD' AS PRDT_TYPE,
					PU.USER_NM AS MASTER_NM,
					PRDT_CD,
					(SELECT CONCAT( PIP.INFO_PRDT_TITL1,' ' ,PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP WHERE PIP.PRDT_CD = PUB.BUY_PRDT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y' ) PRDT_NM,
					PUB.BUY_NO ,
					PUB.BUY_IDX,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PC.CODE_ID,1,5) ) AS CODE_PARENT_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PC.CODE_ID ) AS CODE_NM,
					DATE_FORMAT(PUB.BUY_COMP_DTM , '%Y-%m-%d %H:%i') AS PRDT_STR,
					
					CASE
						WHEN PUB.VOD_CANCLE_END_YN IS NULL then DATE_FORMAT( DATE_ADD( DATE_FORMAT(PUB.BUY_COMP_DTM , '%Y-%m-%d %H:%i'), INTERVAL PRDT.LECT_DTM+IFNULL( (SELECT SUM(EXTE_DATE) FROM PPM_USER_BUY_EXTE PUBE WHERE PUBE.BUY_IDX = PUB.BUY_IDX ) , 0) DAY ) , '%Y-%m-%d %H:%i') 
						ELSE DATE_FORMAT(PUB.VOD_CANCLE_END_DTM , '%Y-%m-%d %H:%i')
					END AS PRDT_END,
					
					PUB.VOD_CANCLE_END_YN,
					DATE_FORMAT(PUB.VOD_CANCLE_END_DTM , '%Y-%m-%d %H:%i') VOD_CANCLE_END_DTM,
					
					( SELECT COUNT(0) FROM PPM_PRDT_LECT LECT, PPM_PRDT_LECT_DATA LECT_D, PPM_PRDT_VOD_DATA VOD_D, PPM_PRDT_VOD PPV 
						WHERE 
						LECT.LECT_IDX = PRDT.PRDT_IDX AND LECT_D.LECT_IDX = LECT.LECT_IDX 	AND LECT_D.VOD_IDX = PPV.VOD_IDX 
						AND PPV.VOD_IDX = VOD_D.VOD_IDX AND  LECT_D.DATA_USE_YN = 'Y' AND VOD_D.DATA_USE_YN = 'Y' AND PPV.VOD_USE_YN = 'Y'   ) AS PRDT_TOTAL_CNT,
					
					( SELECT COUNT(0) FROM PPM_USER_BUY_PROG WHERE BUY_IDX = PUB.BUY_IDX AND PUB.BUY_PRDT_CD LIKE '%VL%' ) AS PRDT_PROG_CNT
				FROM 
					PPM_USER_BUY PUB,
					PPM_CATE PC,
					PPM_USER PU,
					PPM_USER PU_M,
					(
						SELECT 'LECT_IDX' AS PRDT_TYPE, PSLE.CATE_IDX, PSLE.LECT_IDX AS PRDT_IDX, PPLE.LECT_CD AS PRDT_CD, PPLE.LECT_NM AS PRDT_NM, PPLE.LECT_DTM 
						FROM PPM_SALE_LECT PSLE, PPM_PRDT_LECT PPLE WHERE SALE_USE_YN = 'Y' AND PSLE.LECT_IDX = PPLE.LECT_IDX AND PPLE.LECT_USE_YN ='Y'
					) PRDT
				WHERE
					PUB.CATE_IDX = PRDT.CATE_IDX
					AND PUB.BUY_PRDT_CD = PRDT.PRDT_CD
					AND PRDT.CATE_IDX = PC.CATE_IDX
					AND PU_M.USER_IDX = PC.USER_IDX
					AND PUB.USER_IDX = PU.USER_IDX
					AND PUB.USER_IDX = #{userIdx}
					AND PUB.BUY_COMP_YN = 'Y'
					AND PUB.BUY_REFU_YN = 'N'
					AND PUB.BUY_STAT = '결제완료'

					GROUP  BY BUY_NO
			) MAIN
					
				 	
				 	
	) A JOIN (SELECT @rownumA:=0) rownumA ORDER BY PRDT_STR , BUY_IDX 
  ) B JOIN (SELECT @rownumB:=0) rownumB ORDER BY PRDT_STR DESC, BUY_IDX DESC
) C WHERE NUM_ASC BETWEEN '${startRow }' AND '${endRow }'
				]]>
	</select>
	
	<!-- 로그인 체크 -->
	<select id="selectMngMemberLectListCnt" parameterType="hashmap" resultType="java.lang.Integer">
		<![CDATA[
		    SELECT
				COUNT(0) AS CNT
			FROM (
				SELECT 
					PUB.USER_IDX,
					PU_M.USER_IDX AS M_USER_IDX,
					'VOD' AS PRDT_TYPE,
					PU.USER_NM AS MASTER_NM,
					PRDT_CD,
					(SELECT CONCAT( PIP.INFO_PRDT_TITL1,' ' ,PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP WHERE PIP.PRDT_CD = PUB.BUY_PRDT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y' ) PRDT_NM,
					PUB.BUY_NO ,
					PUB.BUY_IDX,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PC.CODE_ID,1,5) ) AS CODE_PARENT_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PC.CODE_ID ) AS CODE_NM,
					DATE_FORMAT(PUB.BUY_COMP_DTM , '%Y-%m-%d %H:%i') AS PRDT_STR,
					DATE_FORMAT( DATE_ADD( DATE_FORMAT(PUB.BUY_COMP_DTM , '%Y-%m-%d %H:%i'), INTERVAL PRDT.LECT_DTM+IFNULL( (SELECT SUM(EXTE_DATE) FROM PPM_USER_BUY_EXTE PUBE WHERE PUBE.BUY_IDX = PUB.BUY_IDX ) , 0) DAY ) , '%Y-%m-%d %H:%i')  AS PRDT_END,
					
					( SELECT COUNT(0) FROM PPM_PRDT_LECT LECT, PPM_PRDT_LECT_DATA LECT_D, PPM_PRDT_VOD_DATA VOD_D, PPM_PRDT_VOD PPV 
						WHERE 
						LECT.LECT_IDX = PRDT.PRDT_IDX AND LECT_D.LECT_IDX = LECT.LECT_IDX 	AND LECT_D.VOD_IDX = PPV.VOD_IDX 
						AND PPV.VOD_IDX = VOD_D.VOD_IDX AND  LECT_D.DATA_USE_YN = 'Y' AND VOD_D.DATA_USE_YN = 'Y' AND PPV.VOD_USE_YN = 'Y'   ) AS PRDT_TOTAL_CNT,
					
					( SELECT COUNT(0) FROM PPM_USER_BUY_PROG WHERE BUY_IDX = PUB.BUY_IDX AND PUB.BUY_PRDT_CD LIKE '%VL%' ) AS PRDT_PROG_CNT
				FROM 
					PPM_USER_BUY PUB,
					PPM_CATE PC,
					PPM_USER PU,
					PPM_USER PU_M,
					(
						SELECT 'LECT_IDX' AS PRDT_TYPE, PSLE.CATE_IDX, PSLE.LECT_IDX AS PRDT_IDX, PPLE.LECT_CD AS PRDT_CD, PPLE.LECT_NM AS PRDT_NM, PPLE.LECT_DTM 
						FROM PPM_SALE_LECT PSLE, PPM_PRDT_LECT PPLE WHERE SALE_USE_YN = 'Y' AND PSLE.LECT_IDX = PPLE.LECT_IDX AND PPLE.LECT_USE_YN ='Y'
					) PRDT
				WHERE
					PUB.CATE_IDX = PRDT.CATE_IDX
					AND PUB.BUY_PRDT_CD = PRDT.PRDT_CD
					AND PRDT.CATE_IDX = PC.CATE_IDX
					AND PU_M.USER_IDX = PC.USER_IDX
					AND PUB.USER_IDX = PU.USER_IDX
					AND PUB.USER_IDX = #{userIdx}
					AND PUB.BUY_COMP_YN = 'Y'
					AND PUB.BUY_REFU_YN = 'N'
					AND PUB.BUY_STAT = '결제완료'

					GROUP  BY BUY_NO
			) MAIN
					
				 	
		]]>
	</select>
	
	<select id="selectMngMemberLectDetail" parameterType="hashmap" resultType="hashmap">
	<![CDATA[
		SELECT
				USER_IDX,
				PRDT_TYPE,
				( SELECT USER_NM FROM PPM_USER WHERE USER_IDX = MAIN.M_USER_IDX ) AS MASTER_NM,
				PRDT_CD,
				PRDT_NM,
				BUY_NO,
				BUY_IDX,
				
				CODE_PARENT_NM,
				CODE_NM,
	
				PRDT_STR,
				PRDT_END,
				DATEDIFF(PRDT_END,PRDT_STR)+1+ IFNULL( (SELECT SUM(EXTE_DATE) FROM PPM_USER_BUY_EXTE PUBE WHERE PUBE.BUY_IDX = MAIN.BUY_IDX ) , 0) AS PRDT_TOTAL_DTM,
				
				CONVERT(PRDT_TOTAL_CNT, CHAR) AS PRDT_TOTAL_CNT,
				CONVERT(PRDT_PROG_CNT, CHAR) AS PRDT_PROG_CNT,
				
				IFNULL(ROUND( PRDT_PROG_CNT/PRDT_TOTAL_CNT*100, 1 ),'') AS PRDT_PROG_AVG
			FROM (
				SELECT 
					PUB.USER_IDX,
					PU_M.USER_IDX AS M_USER_IDX,
					'VOD' AS PRDT_TYPE,
					PU.USER_NM AS MASTER_NM,
					PRDT_CD,
					(SELECT CONCAT( PIP.INFO_PRDT_TITL1,' ' ,PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP WHERE PIP.PRDT_CD = PUB.BUY_PRDT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y' ) PRDT_NM,
					PUB.BUY_NO ,
					PUB.BUY_IDX,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PC.CODE_ID,1,5) ) AS CODE_PARENT_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PC.CODE_ID ) AS CODE_NM,
					DATE_FORMAT(PUB.BUY_COMP_DTM , '%Y-%m-%d %H:%i') AS PRDT_STR,
					DATE_FORMAT( DATE_ADD( DATE_FORMAT(PUB.BUY_COMP_DTM , '%Y-%m-%d %H:%i'), INTERVAL PRDT.LECT_DTM+IFNULL( (SELECT SUM(EXTE_DATE) FROM PPM_USER_BUY_EXTE PUBE WHERE PUBE.BUY_IDX = PUB.BUY_IDX ) , 0) DAY ) , '%Y-%m-%d %H:%i')  AS PRDT_END,
					
					( SELECT COUNT(0) FROM PPM_PRDT_LECT LECT, PPM_PRDT_LECT_DATA LECT_D, PPM_PRDT_VOD_DATA VOD_D, PPM_PRDT_VOD PPV 
						WHERE 
						LECT.LECT_IDX = PRDT.PRDT_IDX AND LECT_D.LECT_IDX = LECT.LECT_IDX 	AND LECT_D.VOD_IDX = PPV.VOD_IDX 
						AND PPV.VOD_IDX = VOD_D.VOD_IDX AND  LECT_D.DATA_USE_YN = 'Y' AND VOD_D.DATA_USE_YN = 'Y' AND PPV.VOD_USE_YN = 'Y'   ) AS PRDT_TOTAL_CNT,
					
					( SELECT COUNT(0) FROM PPM_USER_BUY_PROG WHERE BUY_IDX = PUB.BUY_IDX AND PUB.BUY_PRDT_CD LIKE '%VL%' ) AS PRDT_PROG_CNT
				FROM 
					PPM_USER_BUY PUB,
					PPM_CATE PC,
					PPM_USER PU,
					PPM_USER PU_M,
					(
						SELECT 'LECT_IDX' AS PRDT_TYPE, PSLE.CATE_IDX, PSLE.LECT_IDX AS PRDT_IDX, PPLE.LECT_CD AS PRDT_CD, PPLE.LECT_NM AS PRDT_NM, PPLE.LECT_DTM 
						FROM PPM_SALE_LECT PSLE, PPM_PRDT_LECT PPLE WHERE SALE_USE_YN = 'Y' AND PSLE.LECT_IDX = PPLE.LECT_IDX AND PPLE.LECT_USE_YN ='Y'
					) PRDT
				WHERE
					PUB.CATE_IDX = PRDT.CATE_IDX
					AND PUB.BUY_PRDT_CD = PRDT.PRDT_CD
					AND PRDT.CATE_IDX = PC.CATE_IDX
					AND PU_M.USER_IDX = PC.USER_IDX
					AND PUB.USER_IDX = PU.USER_IDX
					AND PUB.USER_IDX = #{userIdx}
					AND PUB.BUY_COMP_YN = 'Y'
					AND PUB.BUY_REFU_YN = 'N'
					AND PUB.BUY_STAT = '결제완료'

					GROUP  BY BUY_NO
			) MAIN
				WHERE BUY_IDX = #{buyIdx}
			]]>
	</select>
	

	<!-- 로그인 체크 -->
	<select id="selectMngMemberConsList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
SELECT C.*, REPLACE(CONVERT(C.NUM_DESC, CHAR),'.0','') AS NUM_DESC_ORDER FROM (
  SELECT B.*, (@rownumB:=@rownumB+1) as NUM_ASC FROM(  
    SELECT A.*, (@rownumA:=@rownumA+1) as NUM_DESC FROM (
    
		    SELECT
				USER_IDX,
				PRDT_TYPE,
				( SELECT USER_NM FROM PPM_USER WHERE USER_IDX = MAIN.MASTER_IDX ) AS MASTER_NM,
				PRDT_IDX,
				PRDT_CD,
				CATE_IDX,				
				PRDT_NM,
				
				CODE_PARENT_NM,
				CODE_NM,
				BUY_IDX,
	
				PRDT_STR,
				PRDT_END,
				PRDT_PROG_MIN,
				PRDT_PROG_YN,
				PRDT_SCOR_AVG,
				'다시보기' AS PRDT_REPL,
				TEACHER_ID,
				TEACHER_NM,
				REWATCH,
				BUY_COMP_DTM
			FROM (
				SELECT DISTINCT
					( SELECT PUBC2.HIST_VOD_ADDR FROM PPM_USER_BUY_CONS PUBC2 WHERE PUBC2.BUY_IDX = PUB.BUY_IDX and PUBC2.USER_IDX = PUB.USER_IDX AND HIST_FLAG = 'V' ORDER BY PUBC2.SYS_REG_DTM DESC LIMIT 1 ) REWATCH,

					PUB.USER_IDX,
					PC.USER_IDX AS MASTER_IDX,
					PUB.BUY_IDX,
					(
						CASE PRDT_TYPE
							WHEN 'CHAT_IDX' THEN '채팅'
							WHEN 'FACE_IDX' THEN '화상'
							WHEN 'LIVE_IDX' THEN '라이브클래스'
							WHEN 'MAIL_IDX' THEN '이메일'
						END
					) AS PRDT_TYPE,
					PU.USER_NM,
					PRDT_IDX,
					PRDT_CD,
					PRDT.CATE_IDX,
					
					(SELECT USER_EMAIL FROM PPM_USER PU WHERE PU.USER_IDX = PC.USER_IDX) TEACHER_ID, 
					(SELECT USER_NM FROM PPM_USER PU WHERE PU.USER_IDX = PC.USER_IDX) TEACHER_NM, 
					
					PRDT_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PC.CODE_ID,1,5) ) AS CODE_PARENT_NM,
					( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PC.CODE_ID ) AS CODE_NM,
					(
						CASE PRDT_TYPE
							WHEN 'CHAT_IDX' THEN  (SELECT DATE_FORMAT( MIN( PCAHT.CHAT_DT ), '%Y-%m-%d %H:%i' ) FROM PPM_CHAT PCAHT WHERE PCAHT.CHAT_ROOM = PUB.BUY_IDX AND PUB.USER_IDX = PCAHT.USER_IDX AND PCAHT.USER_TYPE = 'U' )
							WHEN 'FACE_IDX' THEN  (SELECT DATE_FORMAT( PUBC.HIST_END_TIME, '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_CONS PUBC WHERE PUBC.BUY_IDX = PUB.BUY_IDX AND PUBC.HIST_FLAG = 'S' ORDER BY PUBC.SYS_REG_DTM  LIMIT 1 ) 
							WHEN 'LIVE_IDX' THEN  (SELECT DATE_FORMAT( PUBC.HIST_END_TIME, '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_CONS PUBC WHERE PUBC.BUY_IDX = PUB.BUY_IDX AND PUBC.HIST_FLAG = 'S' ORDER BY PUBC.SYS_REG_DTM  LIMIT 1 ) 
							WHEN 'MAIL_IDX' THEN  (SELECT DATE_FORMAT( MIN( PUBM.SYS_REG_DTM ), '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_MAIL PUBM WHERE MAIL_IDX = PRDT.PRDT_IDX AND BUY_IDX = PUB.BUY_IDX )
						END
					) AS PRDT_STR,
					(
						CASE PRDT_TYPE
							WHEN 'CHAT_IDX' THEN  (SELECT DATE_FORMAT( MAX( PCAHT.CHAT_DT ), '%Y-%m-%d %H:%i' ) FROM PPM_CHAT PCAHT WHERE PCAHT.CHAT_ROOM = PUB.BUY_IDX AND PUB.USER_IDX = PCAHT.USER_IDX AND PCAHT.USER_TYPE = 'U' ) 
							WHEN 'FACE_IDX' THEN  (SELECT DATE_FORMAT( PUBC.HIST_END_TIME, '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_CONS PUBC WHERE PUBC.BUY_IDX = PUB.BUY_IDX AND PUBC.HIST_FLAG = 'T' ORDER BY PUBC.HIST_END_TIME DESC LIMIT 1 ) 
							WHEN 'LIVE_IDX' THEN  (SELECT DATE_FORMAT( PUBC.HIST_END_TIME, '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_CONS PUBC WHERE PUBC.BUY_IDX = PUB.BUY_IDX AND PUBC.HIST_FLAG = 'T' ORDER BY PUBC.HIST_END_TIME DESC LIMIT 1 )
							WHEN 'MAIL_IDX' THEN  (SELECT DATE_FORMAT( MAX( PUBM.SYS_REG_DTM ), '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_MAIL PUBM WHERE MAIL_IDX = PRDT.PRDT_IDX AND BUY_IDX = PUB.BUY_IDX )
						END
					) AS PRDT_END,
					(
						CASE PRDT_TYPE
							WHEN 'MAIL_IDX' THEN CONCAT( ( SELECT CONVERT(COUNT(0),CHAR) FROM PPM_USER_BUY_MAIL WHERE PPM_USER_BUY_MAIL.BUY_IDX = PUB.BUY_IDX AND MAIL_USE_YN = 'Y' AND PUB.USER_IDX = PPM_USER_BUY_MAIL.SYS_REG_IDX ) ,
							'/', (SELECT PPM.MAIL_CNT FROM PPM_PRDT_MAIL PPM WHERE PPM.MAIL_CD = PRDT.PRDT_CD),'건' )
							WHEN 'CHAT_IDX' THEN ( SELECT CONCAT(CONVERT(COUNT(0),CHAR),'건') FROM PPM_CHAT WHERE CHAT_ROOM = PUB.BUY_IDX AND USER_IDX = PUB.USER_IDX )
							ELSE IFNULL((SELECT
											
											LPAD( TIME_FORMAT( SEC_TO_TIME( 
											(SELECT TIME_TO_SEC( DATE_FORMAT(HIST_END_TIME, '%H:%i:%S') ) FROM	PPM_USER_BUY_CONS C1 WHERE C1.BUY_IDX = PUB.BUY_IDX AND C1.HIST_FLAG = 'T' ORDER BY C1.HIST_END_TIME DESC LIMIT 1)
											- (SELECT TIME_TO_SEC( DATE_FORMAT(SYS_REG_DTM, '%H:%i:%S') ) FROM	PPM_USER_BUY_CONS C2 WHERE C2.BUY_IDX = PUB.BUY_IDX AND C2.HIST_FLAG = 'S' ORDER BY C2.SYS_REG_DTM LIMIT 1)
											
											), '%i:%S'), 5, '0') AS PROG_MIN
										FROM 
											PPM_USER_BUY_CONS SUB1 
										WHERE
											SUB1.BUY_IDX = PUB.BUY_IDX
											LIMIT 1
											
									) ,'00:00')
						END
					) AS PRDT_PROG_MIN,
					(
						CASE PRDT_TYPE
							WHEN 'MAIL_IDX' THEN ( SELECT CASE WHEN COUNT(0) > 0 THEN 'Y' ELSE 'N' END AS PROG_STR FROM PPM_USER_BUY_MAIL WHERE PPM_USER_BUY_MAIL.BUY_IDX = PUB.BUY_IDX AND MAIL_USE_YN = 'Y' and PUB.USER_IDX = PPM_USER_BUY_MAIL.SYS_REG_IDX )
							WHEN 'CHAT_IDX' THEN ( SELECT CASE WHEN COUNT(0) > 0 THEN 'Y' ELSE 'N' END AS PROG_STR FROM PPM_CHAT WHERE CHAT_ROOM = PUB.BUY_IDX AND USER_IDX = PUB.USER_IDX )
							ELSE (SELECT CASE WHEN COUNT(0) > 1 THEN 'Y' ELSE 'N' END AS PROG_STR FROM PPM_USER_BUY_CONS SUB_PUBC WHERE SUB_PUBC.BUY_IDX = PUB.BUY_IDX AND SUB_PUBC.USER_IDX = PUB.USER_IDX)
						END
					) AS PRDT_PROG_YN,
					( SELECT IFNULL(ROUND(AVG(REVI_SCOR),1),'0.0' ) FROM PPM_USER_REVI WHERE BUY_IDX=PUB.BUY_IDX AND REVI_USE_YN = 'Y') AS PRDT_SCOR_AVG,
					DATE_FORMAT( PUB.BUY_COMP_DTM, '%Y-%m-%d' ) BUY_COMP_DTM
				FROM 
					PPM_USER_BUY PUB,
					PPM_CATE PC,
					PPM_USER PU,
					(
						SELECT 'CHAT_IDX' AS PRDT_TYPE, PSC.CATE_IDX, PSC.CHAT_IDX AS PRDT_IDX, PPC.CHAT_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD =  CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM
						FROM PPM_SALE_CHAT PSC, PPM_PRDT_CHAT PPC WHERE SALE_USE_YN = 'Y' AND PSC.CHAT_IDX = PPC.CHAT_IDX AND PPC.CHAT_USE_YN ='Y'
					UNION ALL
						SELECT 'FACE_IDX' AS PRDT_TYPE, PSF.CATE_IDX, PSF.FACE_IDX AS PRDT_IDX, PPF.FACE_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX )  AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y')  AS PRDT_NM
						FROM PPM_SALE_FACE PSF, PPM_PRDT_FACE PPF WHERE SALE_USE_YN = 'Y' AND PSF.FACE_IDX = PPF.FACE_IDX AND PPF.FACE_USE_YN ='Y'
					UNION ALL
						SELECT 'LIVE_IDX' AS PRDT_TYPE, PSLI.CATE_IDX, PSLI.LIVE_IDX AS PRDT_IDX, PPLI.LIVE_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM
						FROM PPM_SALE_LIVE PSLI, PPM_PRDT_LIVE PPLI WHERE SALE_USE_YN = 'Y' AND PSLI.LIVE_IDX = PPLI.LIVE_IDX AND PPLI.LIVE_USE_YN ='Y'
					UNION ALL
						SELECT 'MAIL_IDX' AS PRDT_TYPE, PSM.CATE_IDX, PSM.MAIL_IDX AS PRDT_IDX, PPM.MAIL_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM
						FROM PPM_SALE_MAIL PSM, PPM_PRDT_MAIL PPM WHERE SALE_USE_YN = 'Y' AND PSM.MAIL_IDX = PPM.MAIL_IDX AND PPM.MAIL_USE_YN ='Y'
					) PRDT
				WHERE
					PUB.CATE_IDX = PRDT.CATE_IDX
					AND PUB.BUY_PRDT_CD = PRDT.PRDT_CD
					AND PRDT.CATE_IDX = PC.CATE_IDX
					AND PUB.USER_IDX = PU.USER_IDX
					AND PUB.USER_IDX = #{userIdx}
					AND (PUB.BUY_REFU_YN = 'N' OR PUB.BUY_REFU_YN = 'R' ) 
					AND PUB.BUY_COMP_YN = 'Y' 
					AND (PUB.BUY_STAT = '결제완료' OR PUB.BUY_STAT LIKE '%신청%' )
			) MAIN
			--	 WHERE 
			--		PRDT_STR IS NOT NULL
				 	
	) A JOIN (SELECT @rownumA:=0) rownumA ORDER BY BUY_COMP_DTM
  ) B JOIN (SELECT @rownumB:=0) rownumB ORDER BY NUM_DESC DESC
) C WHERE NUM_ASC BETWEEN '${startRow }' AND '${endRow }'
				]]>
	</select>
	
	<!-- 로그인 체크 -->
	<select id="selectMngMemberConsListCnt" parameterType="hashmap" resultType="java.lang.Integer">
		<![CDATA[
			    SELECT
					COUNT(0) AS CNT
				FROM (
					SELECT DISTINCT
						PUB.USER_IDX,
						PUB.BUY_IDX,
						(
							CASE PRDT_TYPE
								WHEN 'CHAT_IDX' THEN '채팅'
								WHEN 'FACE_IDX' THEN '화상'
								WHEN 'LIVE_IDX' THEN '라이브클래스'
								WHEN 'MAIL_IDX' THEN '이메일'
							END
						) AS PRDT_TYPE,
						PU.USER_NM AS MASTER_NM,
						PRDT_CD,
						PRDT_NM,
						( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = SUBSTR(PC.CODE_ID,1,5) ) AS CODE_PARENT_NM,
						( SELECT CODE_NM FROM PPM_CODE WHERE CODE_ID = PC.CODE_ID ) AS CODE_NM,
						(
							CASE PRDT_TYPE
								WHEN 'CHAT_IDX' THEN  (SELECT DATE_FORMAT( MIN( PCAHT.CHAT_DT ), '%Y-%m-%d %H:%i' ) FROM PPM_CHAT PCAHT WHERE PCAHT.CHAT_ROOM = PUB.BUY_IDX AND PUB.USER_IDX = PCAHT.USER_IDX AND PCAHT.USER_TYPE = 'U' )
								WHEN 'FACE_IDX' THEN  (SELECT DATE_FORMAT( PUBC.HIST_END_TIME, '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_CONS PUBC WHERE PUBC.BUY_IDX = PUB.BUY_IDX AND PUBC.HIST_FLAG = 'S' ORDER BY PUBC.SYS_REG_DTM  LIMIT 1 ) 
								WHEN 'LIVE_IDX' THEN  (SELECT DATE_FORMAT( PUBC.HIST_END_TIME, '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_CONS PUBC WHERE PUBC.BUY_IDX = PUB.BUY_IDX AND PUBC.HIST_FLAG = 'S' ORDER BY PUBC.SYS_REG_DTM  LIMIT 1 ) 
								WHEN 'MAIL_IDX' THEN  (SELECT DATE_FORMAT( MIN( PUBM.SYS_REG_DTM ), '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_MAIL PUBM WHERE MAIL_IDX = PRDT.PRDT_IDX AND BUY_IDX = PUB.BUY_IDX )
							END
						) AS PRDT_STR,
						(
							CASE PRDT_TYPE
								WHEN 'CHAT_IDX' THEN  (SELECT DATE_FORMAT( MAX( PCAHT.CHAT_DT ), '%Y-%m-%d %H:%i' ) FROM PPM_CHAT PCAHT WHERE PCAHT.CHAT_ROOM = PUB.BUY_IDX AND PUB.USER_IDX = PCAHT.USER_IDX AND PCAHT.USER_TYPE = 'U' ) 
								WHEN 'FACE_IDX' THEN  (SELECT DATE_FORMAT( PUBC.HIST_END_TIME, '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_CONS PUBC WHERE PUBC.BUY_IDX = PUB.BUY_IDX AND PUBC.HIST_FLAG = 'T' ORDER BY PUBC.HIST_END_TIME DESC LIMIT 1 ) 
								WHEN 'LIVE_IDX' THEN  (SELECT DATE_FORMAT( PUBC.HIST_END_TIME, '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_CONS PUBC WHERE PUBC.BUY_IDX = PUB.BUY_IDX AND PUBC.HIST_FLAG = 'T' ORDER BY PUBC.HIST_END_TIME DESC LIMIT 1 )
								WHEN 'MAIL_IDX' THEN  (SELECT DATE_FORMAT( MAX( PUBM.SYS_REG_DTM ), '%Y-%m-%d %H:%i' ) FROM PPM_USER_BUY_MAIL PUBM WHERE MAIL_IDX = PRDT.PRDT_IDX AND BUY_IDX = PUB.BUY_IDX )
							END
						) AS PRDT_END,
						(
							CASE PRDT_TYPE
								WHEN 'MAIL_IDX' THEN ( SELECT CONCAT(CONVERT(COUNT(0),CHAR),'건') FROM PPM_USER_BUY_MAIL WHERE PPM_USER_BUY_MAIL.BUY_IDX = PUB.BUY_IDX AND MAIL_USE_YN = 'Y' and PUB.USER_IDX = PPM_USER_BUY_MAIL.SYS_REG_IDX )
								WHEN 'CHAT_IDX' THEN ( SELECT CONCAT(CONVERT(COUNT(0),CHAR),'건') FROM PPM_CHAT WHERE CHAT_ROOM = PUB.BUY_IDX AND USER_IDX = PUB.USER_IDX )
								ELSE IFNULL((SELECT
												
												LPAD( TIME_FORMAT( SEC_TO_TIME( 
												(SELECT TIME_TO_SEC( DATE_FORMAT(HIST_END_TIME, '%H:%i:%S') ) FROM	PPM_USER_BUY_CONS C1 WHERE C1.BUY_IDX = PUB.BUY_IDX AND C1.HIST_FLAG = 'T' ORDER BY C1.HIST_END_TIME DESC LIMIT 1)
												- (SELECT TIME_TO_SEC( DATE_FORMAT(SYS_REG_DTM, '%H:%i:%S') ) FROM	PPM_USER_BUY_CONS C2 WHERE C2.BUY_IDX = PUB.BUY_IDX AND C2.HIST_FLAG = 'S' ORDER BY C2.SYS_REG_DTM LIMIT 1)
												
												), '%i:%S'), 5, '0') AS PROG_MIN
											FROM 
												PPM_USER_BUY_CONS SUB1 
											WHERE
												SUB1.BUY_IDX = PUB.BUY_IDX
												LIMIT 1
												
										) ,'00:00')
							END
						) AS PRDT_PROG_MIN,
						( SELECT IFNULL(ROUND(AVG(REVI_SCOR),1),'0.0' ) FROM PPM_USER_REVI WHERE BUY_IDX=PUB.BUY_IDX AND REVI_USE_YN = 'Y') AS PRDT_SCOR_AVG
					FROM 
						PPM_USER_BUY PUB,
						PPM_CATE PC,
						PPM_USER PU,
						(
							SELECT 'CHAT_IDX' AS PRDT_TYPE, PSC.CATE_IDX, PSC.CHAT_IDX AS PRDT_IDX, PPC.CHAT_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD =  CONCAT( 'COACHING', PPC.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM
							FROM PPM_SALE_CHAT PSC, PPM_PRDT_CHAT PPC WHERE SALE_USE_YN = 'Y' AND PSC.CHAT_IDX = PPC.CHAT_IDX AND PPC.CHAT_USE_YN ='Y'
						UNION ALL
							SELECT 'FACE_IDX' AS PRDT_TYPE, PSF.CATE_IDX, PSF.FACE_IDX AS PRDT_IDX, PPF.FACE_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPF.CATE_IDX )  AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y')  AS PRDT_NM
							FROM PPM_SALE_FACE PSF, PPM_PRDT_FACE PPF WHERE SALE_USE_YN = 'Y' AND PSF.FACE_IDX = PPF.FACE_IDX AND PPF.FACE_USE_YN ='Y'
						UNION ALL
							SELECT 'LIVE_IDX' AS PRDT_TYPE, PSLI.CATE_IDX, PSLI.LIVE_IDX AS PRDT_IDX, PPLI.LIVE_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = PPLI.LIVE_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM
							FROM PPM_SALE_LIVE PSLI, PPM_PRDT_LIVE PPLI WHERE SALE_USE_YN = 'Y' AND PSLI.LIVE_IDX = PPLI.LIVE_IDX AND PPLI.LIVE_USE_YN ='Y'
						UNION ALL
							SELECT 'MAIL_IDX' AS PRDT_TYPE, PSM.CATE_IDX, PSM.MAIL_IDX AS PRDT_IDX, PPM.MAIL_CD AS PRDT_CD, (SELECT CONCAT(PIP.INFO_PRDT_TITL1, ' ', PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP  WHERE  PIP.PRDT_CD = CONCAT( 'COACHING', PPM.CATE_IDX ) AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y') AS PRDT_NM
							FROM PPM_SALE_MAIL PSM, PPM_PRDT_MAIL PPM WHERE SALE_USE_YN = 'Y' AND PSM.MAIL_IDX = PPM.MAIL_IDX AND PPM.MAIL_USE_YN ='Y'
						) PRDT
					WHERE
						PUB.CATE_IDX = PRDT.CATE_IDX
						AND PUB.BUY_PRDT_CD = PRDT.PRDT_CD
						AND PRDT.CATE_IDX = PC.CATE_IDX
						AND PUB.USER_IDX = PU.USER_IDX
						AND PUB.USER_IDX = #{userIdx}
						AND (PUB.BUY_REFU_YN = 'N' OR PUB.BUY_REFU_YN = 'R' ) 
						AND PUB.BUY_COMP_YN = 'Y' 
						AND (PUB.BUY_STAT = '결제완료' OR PUB.BUY_STAT LIKE '%신청%' )
			) MAIN
			--	WHERE 
			--		PRDT_STR IS NOT NULL
		]]>
	</select>
	
	
	<insert id="insertMngMemberData" parameterType="hashmap">
		<![CDATA[
			INSERT 
				INTO PPM_USER
						(
						PREV_ID, 
						PREV_PW, 
						PREV_NM, 
						PREV_USE_YN, 
						
						SYS_REG_IDX, 
						SYS_REG_DTM, 
						SYS_MOD_IDX, 
						SYS_MOD_DTM
						)
				VALUES(
						#{prevId},
						#{prevPw}, 
						#{prevNm}, 
						'Y', 
						
						#{mngLoginIdx}, 
						DATE_FORMAT(NOW(), '%Y%m%d%H%i%S'), 
						#{mngLoginIdx}, 
						DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
						);
		]]>
	</insert>
	
	<select id="selectMngBuyVodList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
SELECT C.*, REPLACE(CONVERT(C.NUM_DESC, CHAR),'.0','') AS NUM_DESC_ORDER FROM (
  SELECT B.*, (@rownumB:=@rownumB+1) as NUM_ASC FROM(  
    SELECT A.*, (@rownumA:=@rownumA+1) as NUM_DESC FROM (
		SELECT
			PPV.VOD_IDX,
			PPVD.DATA_IDX,
			PPVD.DATA_ORDE, 
			PPLE.LECT_IDX,
			PPLE.LECT_CD,
			(SELECT USER_NM FROM PPM_USER M_PU WHERE M_PU.USER_IDX = PC.USER_IDX AND PC.CATE_USE_YN = 'Y' LIMIT 1 ) MASTER_NM,
		    PU.USER_NM,
		    (SELECT CONCAT( PIP.INFO_PRDT_TITL1,' ' ,PIP.INFO_PRDT_TITL2 ) FROM PPM_INFO_PRDT PIP WHERE PIP.PRDT_CD = PUB.BUY_PRDT_CD AND PIP.INFO_ORDE = 0 AND PIP.INFO_USE_YN = 'Y' ) LECT_NM,
		    
		    
		    PPV.VOD_NM,
		    PPVD.DATA_TITL,
		    PPVD.DATA_CD,
	    	( SELECT COUNT(0) FROM PPM_PRDT_VOD_DATA WHERE VOD_IDX = PPV.VOD_IDX ) AS VOD_TOTAL,
	    	IFNULL( DATE_FORMAT( PUBP.SYS_REG_DTM, '%Y-%m-%d %H:%i:%S'), '-' ) AS SYS_REG_DTM,
	    	(SELECT COUNT(0) FROM PPM_USER_BUY_PROG PUBP2 WHERE PUBP2.PROG_IDX = PUBP.PROG_IDX ) AS PROG_CNT,
	    	
	    	( SELECT DATE_FORMAT( MAX( PPM_USER_DOWN_LOG.SYS_REG_DTM ), '%Y-%m-%d %H:%i:%S') FROM PPM_USER_DOWN_LOG WHERE DATA_CD = PMDL.DATA_CD AND USER_IDX = #{userIdx} ) AS DOWN_DTM,
	    	( SELECT COUNT(0) FROM PPM_USER_DOWN_LOG WHERE DATA_CD = PMDL.DATA_CD AND USER_IDX = #{userIdx} ) AS PMDL_CNT,
	    	
	    	CASE 
				WHEN LENGTH ( IFNULL( PPVD.DATA_UUID,'' ) ) = 0 THEN 'N'
			ELSE 'Y'
			END DATA_UUID_YN,
	    	PPVD.DATA_UUID 
		FROM 
			PPM_PRDT_VOD_DATA PPVD
				JOIN PPM_PRDT_VOD PPV ON PPVD.VOD_IDX = PPV.VOD_IDX 
				JOIN PPM_PRDT_LECT_DATA PPLD ON PPLD.VOD_IDX = PPVD.VOD_IDX  
				JOIN PPM_PRDT_LECT PPLE ON PPLE.LECT_IDX = PPLD.LECT_IDX 
				JOIN PPM_USER_BUY PUB ON PPLE.LECT_CD = PUB.BUY_PRDT_CD 
				JOIN PPM_USER PU ON PU.USER_IDX = PUB.USER_IDX 
				JOIN PPM_CATE PC ON PUB.CATE_IDX = PC.CATE_IDX
					LEFT JOIN PPM_USER_BUY_PROG PUBP ON PUBP.BUY_IDX = PUB.BUY_IDX AND PUBP.DATA_IDX = PPVD.DATA_IDX
					LEFT JOIN PPM_USER_DOWN_LOG PMDL ON PMDL.DATA_CD = PPVD.DATA_CD
		WHERE
			PPV.VOD_USE_YN = 'Y'
			AND PPLD.DATA_USE_YN = 'Y'
			AND PPVD.DATA_USE_YN = 'Y'
			
			AND PUB.BUY_IDX = #{buyIdx}
			AND PUB.BUY_PRDT_CD = #{prdtCd}
			
			GROUP BY PPVD.DATA_CD
					
	) A JOIN (SELECT @rownumA:=0) rownumA
  ) B JOIN (SELECT @rownumB:=0) rownumB ORDER BY CONVERT( DATA_ORDE, UNSIGNED ) ASC
) C WHERE NUM_ASC BETWEEN #{startRow } AND '99999999'
		]]>
	</select>
	
	
	<select id="selectMngVodDownLog" parameterType="hashmap" resultType="hashmap">
		<![CDATA[

	SELECT 
		( SELECT DATE_FORMAT( MAX( PPM_USER_DOWN_LOG.SYS_REG_DTM ), '%Y-%m-%d %H:%i:%S') FROM PPM_USER_DOWN_LOG WHERE DATA_CD = PMDL.DATA_CD AND USER_IDX = #{userIdx} ) AS SYS_REG_DTM,
		PPVD.DATA_TITL,
		PPD.VOD_NM,
		PPVD.DATA_CD,
		( SELECT COUNT(0) FROM PPM_USER_DOWN_LOG WHERE DATA_CD = PMDL.DATA_CD AND USER_IDX = #{userIdx} ) AS PMDL_CNT,
		
		CASE 
			WHEN LENGTH ( IFNULL( PPVD.DATA_UUID,'' ) ) = 0 THEN 'N'
		ELSE 'Y'
		END DATA_UUID_YN,
		PPVD.DATA_UUID 
	FROM
		PPM_PRDT_VOD_DATA PPVD
			LEFT JOIN PPM_USER_DOWN_LOG PMDL ON PMDL.DATA_CD = PPVD.DATA_CD
			LEFT JOIN PPM_PRDT_VOD PPD ON PPD.VOD_IDX = PPVD.VOD_IDX
			LEFT JOIN PPM_PRDT_LECT_DATA PPLD ON PPLD.VOD_IDX = PPD.VOD_IDX
			LEFT JOIN PPM_PRDT_LECT PPL ON PPL.LECT_IDX = PPLD.LECT_IDX
	WHERE
		PPL.LECT_CD = #{prdtCd}
		
		AND PPVD.DATA_USE_YN = 'Y'
		AND PPD.VOD_USE_YN = 'Y'
		
		GROUP BY PPVD.DATA_CD
		
		ORDER BY PPVD.DATA_ORDE 
		]]>
	</select>
	
	
	<insert id="insertMngVodExtensionData" parameterType="hashmap">
		<![CDATA[
			INSERT INTO
				PPM_USER_BUY_EXTE (
					BUY_IDX, 
					EXTE_DATE, 
					
					SYS_REG_IDX, 
					SYS_REG_DTM
				) VALUES (
					#{buyIdx},
					#{exteDate},
					
					#{mngLoginIdx}, 
					DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
				);
		]]>
	</insert>

	<update id="updateMngVodEndData" parameterType="hashmap">
		<![CDATA[
			UPDATE PPM_USER_BUY 

				SET 
					VOD_CANCLE_END_YN = 'Y',
					VOD_CANCLE_END_DTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%S')
					
				WHERE BUY_IDX = #{buyIdx}
					AND VOD_CANCLE_END_DTM IS NULL
		]]>
	</update>
	
</mapper>
